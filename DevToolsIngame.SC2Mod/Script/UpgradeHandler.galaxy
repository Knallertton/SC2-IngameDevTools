include "Script/debug_h";
include "Script/split_string";
include "Script/ItemList";

static const string CONTAINERDLG_PATH = "UIContainer/ConsoleUIContainer/CatalogManager/UpgradeManager";
static const string EDITBOX_PATH = "Item";
static const string ADDBTN_PATH = "AddButton";
static const string REMOVEBTN_PATH = "RemoveButton";

struct UpgradeContainerStruct{
    int panel;
    int messageBox;
    int addButton;
    int removeButton;
};

ItemListContainerStruct UpgradeContainer;


static ItemListStruct ItemList;
static ListBoxFilterStruct ListBoxFilter;




bool UpgradeListBoxFilterQuery(bool a, bool b){
    int player = EventPlayer();
	playergroup pg = PlayerGroupSingle(player);
	string val = DialogControlGetPropertyAsString(ListBoxFilter.editbox,c_triggerControlPropertyEditText,EventPlayer());
	ItemList_FilterListRebuild(ItemList,ListBoxFilter,val,pg);
	return true;
}


bool UpgradeListBoxSelectionChanged(bool a, bool b){
	
    return ItemList_FilterBoxSelectionChanged(ItemList, ListBoxFilter, EventPlayer());
}

void UpgradeListBoxSetActive(ItemListStructRef itemList, int index,playergroup pg){
	DialogControlSetPropertyAsString(UpgradeContainer.messageBox,c_triggerControlPropertyEditText,pg,itemList.list[index]);
}

static unitgroup UpgradeContainerTarget(){
    return UnitGroupSelected(EventPlayer());
    
}

static string UpgradeContainerUpgrade(string val){
    return val;
    
}

bool UpgradeContainerSendHandler(bool a, bool b){
    bool trigRan = true;
    string val = DialogControlGetPropertyAsString(UpgradeContainer.messageBox,c_triggerControlPropertyEditText,EventPlayer());
    string UpgradeType = UpgradeContainerUpgrade(val);
    unitgroup ug = UpgradeContainerTarget();
    int i;
    if(EventDialogControl()==UpgradeContainer.addButton){
        TechTreeUpgradeAddLevel(EventPlayer(),val,1);
    }
    else if(EventDialogControl()==UpgradeContainer.removeButton){
        TechTreeUpgradeAddLevel(EventPlayer(),val,-1);
    }
    return trigRan;
}

void UpgradeHandler_Init(){
    playergroup pg = PlayerGroupAll();
    ItemListContainer_InitStandard(UpgradeContainer, CONTAINERDLG_PATH, "UpgradeContainerSendHandler");
    ItemListInitFromCatalog(ItemList, c_gameCatalogUpgrade, ItemListCatalogFilter);
    ItemList_FilterListInitStandard(ListBoxFilter, "UpgradeListBox", UpgradeListBoxSetActive, ItemListItemTextValue, CONTAINERDLG_PATH+"/NavList");
	ItemList_FilterListRebuild(ItemList,ListBoxFilter,"",pg);
}