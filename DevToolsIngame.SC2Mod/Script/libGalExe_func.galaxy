void libGalExe_exec(int player, string cmd)
{
    string paramMsg = "";
    string function = "";
    int strlen = StringLength(cmd);

    int parseDepth = 0;
    int paramindex = 0;
    string[99] params;

    int i;
    int j;
    string c;

    i = 1;
    while(1)
    {
        if(StringSub(cmd, i, i) != "(")
        {
            function += StringSub(cmd, i, i);
            i += 1;
        }
        else
        {
            break;
        }
        if(i > StringLength(cmd) + 1)
        {
            break;
        }
    }
    function = libGalExe_strip(function);
    paramMsg = StringSub(cmd, i, strlen);
    libGalExe_debug(player, "[Function]: " + function);
    parseDepth = 0;
    for(i = 2; i < StringLength(paramMsg); i+=1)
    {
        c = StringSub(paramMsg, i, i);
        if(c == "(")
        {
            parseDepth += 1;
            params[paramindex] += c;
        }
        else if(c == ")" && parseDepth > 0)
        {
            parseDepth -= 1;
            params[paramindex] += c;
        }
        else if(c == "," && parseDepth == 0)
        {
            paramindex += 1;
        }
        else
        {
            params[paramindex] += c;
        }
    }
    for(i = 0; i < 99; i+=1)
    {
        if(params[i])
        {
            params[i] = libGalExe_strip(params[i]);
            libGalExe_debug(player, "[Param " + IntToString(i+1) + "]: " + params[i]);
        }
    }
	if(function == "libNtve_gf_AttachModelToActor"){
		libNtve_gf_AttachModelToActor(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_AttachModelToUnit"){
		libNtve_gf_AttachModelToUnit(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_AttachModelToUnitInheritVisibility"){
		libNtve_gf_AttachModelToUnitInheritVisibility(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_AttachModelToActor2"){
		libNtve_gf_AttachModelToActor2(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_AttachActorToUnit"){
		libNtve_gf_AttachActorToUnit(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_AttachActorToActor"){
		libNtve_gf_AttachActorToActor(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ActorScopeCreate"){
		ActorScopeCreate(libGalExe_string(player, params[0]));
	}
	else if(function == "ActorCreate"){
		ActorCreate(libGalExe_actorscope(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "ActorRegionCreate"){
		ActorRegionCreate(libGalExe_actorscope(player, params[0]), libGalExe_string(player, params[1]), libGalExe_region(player, params[2]));
	}
	else if(function == "libNtve_gf_CreateActorAtPoint"){
		libNtve_gf_CreateActorAtPoint(libGalExe_string(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "libNtve_gf_CreateModelAtPoint"){
		libNtve_gf_CreateModelAtPoint(libGalExe_string(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "libNtve_gf_CreateModelWithPointFacing"){
		libNtve_gf_CreateModelWithPointFacing(libGalExe_string(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "ActorSend"){
		ActorSend(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ActorSendAsText"){
		ActorSendAsText(libGalExe_actor(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "libNtve_gf_SendActorMessageToUnit"){
		libNtve_gf_SendActorMessageToUnit(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ActorScopeSend"){
		ActorScopeSend(libGalExe_actorscope(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_ActorRegionSendSimple"){
		libNtve_gf_ActorRegionSendSimple(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ActorRegionSend"){
		ActorRegionSend(libGalExe_actor(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "libNtve_gf_SendActorMessageToGameRegion"){
		libNtve_gf_SendActorMessageToGameRegion(libGalExe_region(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_SendActorMessageToGameRegionWithFilters"){
		libNtve_gf_SendActorMessageToGameRegionWithFilters(libGalExe_region(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "ActorSendTo"){
		ActorSendTo(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ActorSendToAsText"){
		ActorSendToAsText(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "ActorScopeKill"){
		ActorScopeKill(libGalExe_actorscope(player, params[0]));
	}
	else if(function == "ActorWorldParticleFXDestroy"){
		ActorWorldParticleFXDestroy();
	}
	else if(function == "libNtve_gf_KillModel"){
		libNtve_gf_KillModel(libGalExe_actor(player, params[0]));
	}
	else if(function == "ActorScopeOrphan"){
		ActorScopeOrphan(libGalExe_actorscope(player, params[0]));
	}
	else if(function == "libNtve_gf_RemoveDoodadsinRegion"){
		libNtve_gf_RemoveDoodadsinRegion(libGalExe_region(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_RemoveDeathModelsinRegion"){
		libNtve_gf_RemoveDeathModelsinRegion(libGalExe_region(player, params[0]));
	}
	else if(function == "libNtve_gf_RemoveDeathModelsinRegionImmediately"){
		libNtve_gf_RemoveDeathModelsinRegionImmediately(libGalExe_region(player, params[0]));
	}
	else if(function == "libNtve_gf_CreateLookAtTargetAtPoint"){
		libNtve_gf_CreateLookAtTargetAtPoint(libGalExe_point(player, params[0]));
	}
	else if(function == "libNtve_gf_CreateLookAtTargetAtUnitAttachPoint"){
		libNtve_gf_CreateLookAtTargetAtUnitAttachPoint(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ActorLookAtStart"){
		ActorLookAtStart(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_actor(player, params[4]));
	}
	else if(function == "ActorLookAtStop"){
		ActorLookAtStop(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "ActorLookAtTypeStart"){
		ActorLookAtTypeStart(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_actor(player, params[2]));
	}
	else if(function == "ActorLookAtTypeStop"){
		ActorLookAtTypeStop(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_SimpleLookAtStart"){
		libNtve_gf_SimpleLookAtStart(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_actor(player, params[2]));
	}
	else if(function == "libNtve_gf_MakeUnitLookAtPoint"){
		libNtve_gf_MakeUnitLookAtPoint(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "libNtve_gf_MakeUnitLookAtUnit"){
		libNtve_gf_MakeUnitLookAtUnit(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "libNtve_gf_SimpleLookAtStop"){
		libNtve_gf_SimpleLookAtStop(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ActorRefSet"){
		ActorRefSet(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_actor(player, params[2]));
	}
	else if(function == "ActorTextureGroupApplyGlobal"){
		ActorTextureGroupApplyGlobal(libGalExe_string(player, params[0]));
	}
	else if(function == "ActorTextureGroupRemoveGlobal"){
		ActorTextureGroupRemoveGlobal(libGalExe_string(player, params[0]));
	}
	else if(function == "ActorTextureGroupPush"){
		ActorTextureGroupPush();
	}
	else if(function == "ActorTextureGroupPop"){
		ActorTextureGroupPop();
	}
	else if(function == "libNtve_gf_MakeModelFaceAngle"){
		libNtve_gf_MakeModelFaceAngle(libGalExe_actor(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "libNtve_gf_PlayMovieTextureOnUnitActor"){
		libNtve_gf_PlayMovieTextureOnUnitActor(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_StopAllVideoTexturesOnUnit"){
		libNtve_gf_StopAllVideoTexturesOnUnit(libGalExe_unit(player, params[0]));
	}
	else if(function == "libNtve_gf_ShowHideDoodadsInRegion"){
		libNtve_gf_ShowHideDoodadsInRegion(libGalExe_bool(player, params[0]), libGalExe_region(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ActorAddOrientUpdate"){
		ActorAddOrientUpdate(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_DeclareNextTown"){
		libNtve_gf_DeclareNextTown(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "PlayerBeaconClearTarget"){
		PlayerBeaconClearTarget(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlayerBeaconSetAutoCast"){
		PlayerBeaconSetAutoCast(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PlayerBeaconSetTargetPoint"){
		PlayerBeaconSetTargetPoint(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_point(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "PlayerBeaconSetTargetUnit"){
		PlayerBeaconSetTargetUnit(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "PlayerBeaconAlert"){
		PlayerBeaconAlert(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_text(player, params[3]));
	}
	else if(function == "libNtve_gf_PlayAnimation"){
		libNtve_gf_PlayAnimation(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "libNtve_gf_PlayAnimationOnDoodadsInRegion"){
		libNtve_gf_PlayAnimationOnDoodadsInRegion(libGalExe_region(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]), libGalExe_int(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "libNtve_gf_KillDoodadsInRegion"){
		libNtve_gf_KillDoodadsInRegion(libGalExe_region(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_ClearAnimation"){
		libNtve_gf_ClearAnimation(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_ClearAnimationOnDoodadsInRegion"){
		libNtve_gf_ClearAnimationOnDoodadsInRegion(libGalExe_region(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_TurnAnimationPropertiesOn"){
		libNtve_gf_TurnAnimationPropertiesOn(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_TurnAnimationPropertiesOnWithBlendInOut"){
		libNtve_gf_TurnAnimationPropertiesOnWithBlendInOut(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "libNtve_gf_TurnAnimationPropertiesOff"){
		libNtve_gf_TurnAnimationPropertiesOff(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_TurnAllAnimationPropertiesOff"){
		libNtve_gf_TurnAllAnimationPropertiesOff(libGalExe_actor(player, params[0]));
	}
	else if(function == "AnimLengthQueryByName"){
		AnimLengthQueryByName(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "AnimLengthQueryByProps"){
		AnimLengthQueryByProps(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "AnimLengthQueryWait"){
		AnimLengthQueryWait();
	}
	else if(function == "AnimWait"){
		AnimWait(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "libNtve_gf_SetAnimationTime"){
		libNtve_gf_SetAnimationTime(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "libNtve_gf_SetAnimationTimeScale"){
		libNtve_gf_SetAnimationTimeScale(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_SetAnimationCompletion"){
		libNtve_gf_SetAnimationCompletion(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_SetAnimationDuration"){
		libNtve_gf_SetAnimationDuration(libGalExe_actor(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "ModelAnimationLoad"){
		ModelAnimationLoad(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ModelAnimationLoadOverriding"){
		ModelAnimationLoadOverriding(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ModelAnimationUnload"){
		ModelAnimationUnload(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitTypeAnimationLoad"){
		UnitTypeAnimationLoad(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitTypeAnimationLoadOverriding"){
		UnitTypeAnimationLoadOverriding(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitTypeAnimationUnload"){
		UnitTypeAnimationUnload(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BankLoad"){
		BankLoad(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BankReload"){
		BankReload(libGalExe_bank(player, params[0]));
	}
	else if(function == "BankSave"){
		BankSave(libGalExe_bank(player, params[0]));
	}
	else if(function == "BankWait"){
		BankWait(libGalExe_bank(player, params[0]));
	}
	else if(function == "BankValueSetFromFlag"){
		BankValueSetFromFlag(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "BankValueSetFromInt"){
		BankValueSetFromInt(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BankValueSetFromPoint"){
		BankValueSetFromPoint(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_point(player, params[3]));
	}
	else if(function == "BankValueSetFromFixed"){
		BankValueSetFromFixed(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "BankValueSetFromString"){
		BankValueSetFromString(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "BankValueSetFromText"){
		BankValueSetFromText(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_text(player, params[3]));
	}
	else if(function == "BankValueSetFromUnit"){
		BankValueSetFromUnit(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_unit(player, params[3]));
	}
	else if(function == "BankValueGetAsUnit"){
		BankValueGetAsUnit(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_point(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "BankBackupRemove"){
		BankBackupRemove(libGalExe_bank(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "BankRestore"){
		BankRestore(libGalExe_bank(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "BankBackup"){
		BankBackup(libGalExe_bank(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BankDeleteCampaignBanks"){
		BankDeleteCampaignBanks(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BankOptionSet"){
		BankOptionSet(libGalExe_bank(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BankSectionCreate"){
		BankSectionCreate(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BankRemove"){
		BankRemove(libGalExe_bank(player, params[0]));
	}
	else if(function == "BankKeyRemove"){
		BankKeyRemove(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "BankSectionRemove"){
		BankSectionRemove(libGalExe_bank(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BitMaskSetIndex"){
		BitMaskSetIndex(libGalExe_bitmask(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BitMaskReset"){
		BitMaskReset(libGalExe_bitmask(player, params[0]));
	}
	else if(function == "BitMaskAddBitMask"){
		BitMaskAddBitMask(libGalExe_bitmask(player, params[0]), libGalExe_bitmask(player, params[1]));
	}
	else if(function == "BitMaskAndBitMask"){
		BitMaskAndBitMask(libGalExe_bitmask(player, params[0]), libGalExe_bitmask(player, params[1]));
	}
	else if(function == "BitMaskOrBitMask"){
		BitMaskOrBitMask(libGalExe_bitmask(player, params[0]), libGalExe_bitmask(player, params[1]));
	}
	else if(function == "BitMaskXorBitMask"){
		BitMaskXorBitMask(libGalExe_bitmask(player, params[0]), libGalExe_bitmask(player, params[1]));
	}
	else if(function == "BitMaskInvert"){
		BitMaskInvert(libGalExe_bitmask(player, params[0]));
	}
	else if(function == "BitMaskLeftShift"){
		BitMaskLeftShift(libGalExe_bitmask(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BitMaskRightShift"){
		BitMaskRightShift(libGalExe_bitmask(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "CameraApplyInfo"){
		CameraApplyInfo(libGalExe_int(player, params[0]), libGalExe_camerainfo(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "CameraPan"){
		CameraPan(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "CameraLookAt"){
		CameraLookAt(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "CameraSave"){
		CameraSave(libGalExe_int(player, params[0]));
	}
	else if(function == "CameraRestore"){
		CameraRestore(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "CameraSetChannelOnPortrait"){
		CameraSetChannelOnPortrait(libGalExe_int(player, params[0]), libGalExe_camerainfo(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "CameraClearChannelOnPortrait"){
		CameraClearChannelOnPortrait(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "CameraSetData"){
		CameraSetData(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "CameraUseModel"){
		CameraUseModel(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "CameraSetChannel"){
		CameraSetChannel(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "CameraClearChannel"){
		CameraClearChannel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "CameraLockInput"){
		CameraLockInput(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraSetBounds"){
		CameraSetBounds(libGalExe_playergroup(player, params[0]), libGalExe_region(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "CameraShakeStart"){
		CameraShakeStart(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]), libGalExe_fixed(player, params[6]));
	}
	else if(function == "CameraShake"){
		CameraShake(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "CameraShakeStop"){
		CameraShakeStop(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_SwooshCamera"){
		libNtve_gf_SwooshCamera(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_point(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "CameraFollowUnitGroup"){
		CameraFollowUnitGroup(libGalExe_int(player, params[0]), libGalExe_unitgroup(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "CameraForceFollowUnitGroup"){
		CameraForceFollowUnitGroup(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraLookAtUnit"){
		CameraLookAtUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "CameraLookAtActor"){
		CameraLookAtActor(libGalExe_int(player, params[0]), libGalExe_actor(player, params[1]));
	}
	else if(function == "CameraForceMouseRelative"){
		CameraForceMouseRelative(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraSetMouseRotates"){
		CameraSetMouseRotates(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraSetMouseRotationSpeed"){
		CameraSetMouseRotationSpeed(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "CameraUseHeightDisplacement"){
		CameraUseHeightDisplacement(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraUseHeightSmoothing"){
		CameraUseHeightSmoothing(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraSetVerticalFieldOfView"){
		CameraSetVerticalFieldOfView(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CameraSetValue"){
		CameraSetValue(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "CameraInfoSetValue"){
		CameraInfoSetValue(libGalExe_camerainfo(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "CameraInfoSetTarget"){
		CameraInfoSetTarget(libGalExe_camerainfo(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "CatalogFieldValueSet"){
		CatalogFieldValueSet(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "libNtve_gf_CatalogFieldValueSetAsReal"){
		libNtve_gf_CatalogFieldValueSetAsReal(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "CatalogFieldValueModify"){
		CatalogFieldValueModify(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]), libGalExe_int(player, params[5]));
	}
	else if(function == "libNtve_gf_CatalogFieldValueModifyBasedOnDefaultValue"){
		libNtve_gf_CatalogFieldValueModifyBasedOnDefaultValue(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_int(player, params[5]));
	}
	else if(function == "CatalogReferenceSet"){
		CatalogReferenceSet(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_CatalogReferenceSetAsReal"){
		libNtve_gf_CatalogReferenceSetAsReal(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "CatalogReferenceModify"){
		CatalogReferenceModify(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "libNtve_gf_CatalogReferenceModifyBasedOnDefaultValue"){
		libNtve_gf_CatalogReferenceModifyBasedOnDefaultValue(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "CatalogLinkReplace"){
		CatalogLinkReplace(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "libNtve_gf__CineModeTurnOnOffForPlayer"){
		libNtve_gf__CineModeTurnOnOffForPlayer(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__CineModeTurnOnOffForPlayerGroup"){
		libNtve_gf__CineModeTurnOnOffForPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__CineModeChangeFogSettingForPlayer"){
		libNtve_gf__CineModeChangeFogSettingForPlayer(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__CineModeChangeFogSettingForPlayerGroup"){
		libNtve_gf__CineModeChangeFogSettingForPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__CineModeChangeMaskSettingForPlayer"){
		libNtve_gf__CineModeChangeMaskSettingForPlayer(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__CineModeChangeMaskSettingForPlayerGroup"){
		libNtve_gf__CineModeChangeMaskSettingForPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__CineModeHideUI"){
		libNtve_gf__CineModeHideUI(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "libNtve_gf__CineModeRestoreUI"){
		libNtve_gf__CineModeRestoreUI(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "libNtve_gf__CineModeStoreCheatStatus"){
		libNtve_gf__CineModeStoreCheatStatus();
	}
	else if(function == "libNtve_gf__CineModeRestoreCheatStatus"){
		libNtve_gf__CineModeRestoreCheatStatus();
	}
	else if(function == "CinematicMode"){
		CinematicMode(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_CinematicMode"){
		libNtve_gf_CinematicMode(libGalExe_bool(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_GlobalCinematicSetting"){
		libNtve_gf_GlobalCinematicSetting(libGalExe_bool(player, params[0]));
	}
	else if(function == "libNtve_gf_SetCinematicTransitionStyle"){
		libNtve_gf_SetCinematicTransitionStyle(libGalExe_int(player, params[0]));
	}
	else if(function == "CinematicDataRun"){
		CinematicDataRun(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "CinematicDataStop"){
		CinematicDataStop();
	}
	else if(function == "CinematicFade"){
		CinematicFade(libGalExe_bool(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_int(player, params[2]), libGalExe_color(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "CinematicOverlay"){
		CinematicOverlay(libGalExe_bool(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "SelectMainShadowLight"){
		SelectMainShadowLight(libGalExe_string(player, params[0]));
	}
	else if(function == "MovieStartRecording"){
		MovieStartRecording(libGalExe_string(player, params[0]));
	}
	else if(function == "MovieAddSubTitle"){
		MovieAddSubTitle(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "MovieAddSubTitleText"){
		MovieAddSubTitleText(libGalExe_text(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "MovieAddTriggerFunction"){
		MovieAddTriggerFunction(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "MovieStopRecording"){
		MovieStopRecording();
	}
	else if(function == "libNtve_gf_MovieDynamicSubtitlesandDuration"){
		libNtve_gf_MovieDynamicSubtitlesandDuration(libGalExe_string(player, params[0]));
	}
	else if(function == "ConversationCreate"){
		ConversationCreate(libGalExe_bool(player, params[0]));
	}
	else if(function == "ConversationReplyCreate"){
		ConversationReplyCreate(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ConversationShow"){
		ConversationShow(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "ConversationReplySetText"){
		ConversationReplySetText(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "ConversationDestroy"){
		ConversationDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "ConversationReplyDestroy"){
		ConversationReplyDestroy(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ConversationDestroyAll"){
		ConversationDestroyAll();
	}
	else if(function == "ConversationReplyDestroyAll"){
		ConversationReplyDestroyAll(libGalExe_int(player, params[0]));
	}
	else if(function == "ConversationReplySetState"){
		ConversationReplySetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "ConversationDataStateSetValue"){
		ConversationDataStateSetValue(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ConversationDataRegisterPortrait"){
		ConversationDataRegisterPortrait(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ConversationDataRegisterUnit"){
		ConversationDataRegisterUnit(libGalExe_string(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "ConversationDataRegisterCamera"){
		ConversationDataRegisterCamera(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_camerainfo(player, params[2]), libGalExe_trigger(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "ConversationDataRun"){
		ConversationDataRun(libGalExe_string(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "ConversationDataStop"){
		ConversationDataStop();
	}
	else if(function == "ConversationDataChoiceSetState"){
		ConversationDataChoiceSetState(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "ConversationDataChoiceSetPicked"){
		ConversationDataChoiceSetPicked(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "ConversationDataChoiceSetPickedCount"){
		ConversationDataChoiceSetPickedCount(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "ConversationDataLineSetPickedCount"){
		ConversationDataLineSetPickedCount(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "ConversationDataLineSetPlayers"){
		ConversationDataLineSetPlayers(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "ConversationDataLineResetPlayers"){
		ConversationDataLineResetPlayers(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ConversationDataLineHideForObservers"){
		ConversationDataLineHideForObservers(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "ConversationDataSetListenerGender"){
		ConversationDataSetListenerGender(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ConversationDataSaveStateValue"){
		ConversationDataSaveStateValue(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ConversationDataLoadStateValue"){
		ConversationDataLoadStateValue(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ConversationDataSaveStateValues"){
		ConversationDataSaveStateValues(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ConversationDataLoadStateValues"){
		ConversationDataLoadStateValues(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ConversationDataResetStateValues"){
		ConversationDataResetStateValues(libGalExe_string(player, params[0]));
	}
	else if(function == "ConversationDataSaveNodeState"){
		ConversationDataSaveNodeState(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ConversationDataLoadNodeState"){
		ConversationDataLoadNodeState(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "ConversationDataResetNodeState"){
		ConversationDataResetNodeState(libGalExe_string(player, params[0]));
	}
	else if(function == "ConversationDataPreloadLines"){
		ConversationDataPreloadLines(libGalExe_string(player, params[0]));
	}
	else if(function == "ConversationDataPreloadLinesQueue"){
		ConversationDataPreloadLinesQueue(libGalExe_string(player, params[0]));
	}
	else if(function == "ConversationDataSimulateRun"){
		ConversationDataSimulateRun(libGalExe_string(player, params[0]));
	}
	else if(function == "CutsceneSetGlobalFilter"){
		CutsceneSetGlobalFilter(libGalExe_string(player, params[0]));
	}
	else if(function == "CutsceneSetFilter"){
		CutsceneSetFilter(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "CutsceneAddGlobalFilter"){
		CutsceneAddGlobalFilter(libGalExe_string(player, params[0]));
	}
	else if(function == "CutsceneAddFilter"){
		CutsceneAddFilter(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "CutsceneRemoveGlobalFilter"){
		CutsceneRemoveGlobalFilter(libGalExe_string(player, params[0]));
	}
	else if(function == "CutsceneRemoveFilter"){
		CutsceneRemoveFilter(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "CutsceneClearGlobalFilters"){
		CutsceneClearGlobalFilters();
	}
	else if(function == "CutsceneClearFilters"){
		CutsceneClearFilters(libGalExe_int(player, params[0]));
	}
	else if(function == "CutsceneCreateNoPosition"){
		CutsceneCreateNoPosition(libGalExe_string(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "CutsceneCreateNew"){
		CutsceneCreateNew(libGalExe_string(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_playergroup(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "CutsceneGoToNextBookmark"){
		CutsceneGoToNextBookmark(libGalExe_int(player, params[0]));
	}
	else if(function == "CutscenePlay"){
		CutscenePlay(libGalExe_int(player, params[0]));
	}
	else if(function == "CutscenePause"){
		CutscenePause(libGalExe_int(player, params[0]));
	}
	else if(function == "CutsceneStop"){
		CutsceneStop(libGalExe_int(player, params[0]));
	}
	else if(function == "CutsceneSetTime"){
		CutsceneSetTime(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "CutsceneGoToBookmark"){
		CutsceneGoToBookmark(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "CutsceneShow"){
		CutsceneShow(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CutscenePlayCutsceneRangeOverTime"){
		CutscenePlayCutsceneRangeOverTime(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "CutsceneFade"){
		CutsceneFade(libGalExe_bool(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_color(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_playergroup(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "WaitForCutsceneToEnd"){
		WaitForCutsceneToEnd(libGalExe_int(player, params[0]));
	}
	else if(function == "DataTableSetAbilCmd"){
		DataTableSetAbilCmd(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_abilcmd(player, params[2]));
	}
	else if(function == "DataTableSetActor"){
		DataTableSetActor(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_actor(player, params[2]));
	}
	else if(function == "DataTableSetActorScope"){
		DataTableSetActorScope(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_actorscope(player, params[2]));
	}
	else if(function == "DataTableSetBank"){
		DataTableSetBank(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bank(player, params[2]));
	}
	else if(function == "DataTableSetBool"){
		DataTableSetBool(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "DataTableSetByte"){
		DataTableSetByte(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_byte(player, params[2]));
	}
	else if(function == "DataTableSetCameraInfo"){
		DataTableSetCameraInfo(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_camerainfo(player, params[2]));
	}
	else if(function == "DataTableSetCinematic"){
		DataTableSetCinematic(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetColor"){
		DataTableSetColor(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_color(player, params[2]));
	}
	else if(function == "DataTableSetControl"){
		DataTableSetControl(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetConversation"){
		DataTableSetConversation(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetReply"){
		DataTableSetReply(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetDialog"){
		DataTableSetDialog(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_SaveDataTableValueDialogItem"){
		libNtve_gf_SaveDataTableValueDialogItem(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_SaveDataTableValueDifficultyLevel"){
		libNtve_gf_SaveDataTableValueDifficultyLevel(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetDoodad"){
		DataTableSetDoodad(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_doodad(player, params[2]));
	}
	else if(function == "DataTableSetInt"){
		DataTableSetInt(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetMarker"){
		DataTableSetMarker(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_marker(player, params[2]));
	}
	else if(function == "DataTableSetObjective"){
		DataTableSetObjective(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetOrder"){
		DataTableSetOrder(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_order(player, params[2]));
	}
	else if(function == "DataTableSetPing"){
		DataTableSetPing(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetPlanet"){
		DataTableSetPlanet(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_SaveDataTableValuePlayerColor"){
		libNtve_gf_SaveDataTableValuePlayerColor(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetPlayerGroup"){
		DataTableSetPlayerGroup(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DataTableSetPoint"){
		DataTableSetPoint(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "DataTableSetPortrait"){
		DataTableSetPortrait(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetFixed"){
		DataTableSetFixed(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "DataTableSetRegion"){
		DataTableSetRegion(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_region(player, params[2]));
	}
	else if(function == "DataTableSetRevealer"){
		DataTableSetRevealer(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_revealer(player, params[2]));
	}
	else if(function == "DataTableSetSound"){
		DataTableSetSound(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_sound(player, params[2]));
	}
	else if(function == "DataTableSetSoundLink"){
		DataTableSetSoundLink(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_soundlink(player, params[2]));
	}
	else if(function == "DataTableSetString"){
		DataTableSetString(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "DataTableSetText"){
		DataTableSetText(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "libNtve_gf_SaveDataTableValueTextTag"){
		libNtve_gf_SaveDataTableValueTextTag(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetTimer"){
		DataTableSetTimer(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_timer(player, params[2]));
	}
	else if(function == "DataTableSetTransmission"){
		DataTableSetTransmission(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DataTableSetTransmissionSource"){
		DataTableSetTransmissionSource(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_transmissionsource(player, params[2]));
	}
	else if(function == "DataTableSetTrigger"){
		DataTableSetTrigger(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_trigger(player, params[2]));
	}
	else if(function == "DataTableSetUnit"){
		DataTableSetUnit(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]));
	}
	else if(function == "DataTableSetUnitFilter"){
		DataTableSetUnitFilter(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unitfilter(player, params[2]));
	}
	else if(function == "DataTableSetUnitGroup"){
		DataTableSetUnitGroup(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unitgroup(player, params[2]));
	}
	else if(function == "DataTableSetWave"){
		DataTableSetWave(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_wave(player, params[2]));
	}
	else if(function == "DataTableSetWaveInfo"){
		DataTableSetWaveInfo(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_waveinfo(player, params[2]));
	}
	else if(function == "DataTableSetWaveTarget"){
		DataTableSetWaveTarget(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]), libGalExe_wavetarget(player, params[2]));
	}
	else if(function == "DataTableValueRemove"){
		DataTableValueRemove(libGalExe_bool(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "DataTableClear"){
		DataTableClear(libGalExe_bool(player, params[0]));
	}
	else if(function == "TriggerDebugOutput"){
		TriggerDebugOutput(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TriggerDebugOutputEnable"){
		TriggerDebugOutputEnable(libGalExe_bool(player, params[0]));
	}
	else if(function == "TriggerDebugEnableType"){
		TriggerDebugEnableType(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TriggerDebugSetTypeColor"){
		TriggerDebugSetTypeColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]));
	}
	else if(function == "TriggerDebugSetTypeFile"){
		TriggerDebugSetTypeFile(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "TriggerDebugSetTypeFilter"){
		TriggerDebugSetTypeFilter(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TriggerDebugSetTypeName"){
		TriggerDebugSetTypeName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "TriggerDebugWindowOpen"){
		TriggerDebugWindowOpen(libGalExe_bool(player, params[0]));
	}
	else if(function == "WaitForProfilerLoggingToEnd"){
		WaitForProfilerLoggingToEnd();
	}
	else if(function == "StartProfileRun"){
		StartProfileRun(libGalExe_text(player, params[0]));
	}
	else if(function == "StopProfileRun"){
		StopProfileRun();
	}
	else if(function == "PerfTestStart"){
		PerfTestStart(libGalExe_text(player, params[0]));
	}
	else if(function == "PerfTestStop"){
		PerfTestStop();
	}
	else if(function == "PerfTestGetFPS"){
		PerfTestGetFPS();
	}
	else if(function == "UnitStatsStart"){
		UnitStatsStart(libGalExe_text(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UnitStatsStop"){
		UnitStatsStop();
	}
	else if(function == "EngineReset"){
		EngineReset();
	}
	else if(function == "GameWaitForResourcesToComplete"){
		GameWaitForResourcesToComplete();
	}
	else if(function == "DialogCreate"){
		DialogCreate(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "DialogSetVisible"){
		DialogSetVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "DialogSetTitle"){
		DialogSetTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "DialogSetSize"){
		DialogSetSize(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DialogSetPosition"){
		DialogSetPosition(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "DialogSetPositionRelative"){
		DialogSetPositionRelative(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]));
	}
	else if(function == "DialogSetPositionRelativeToUnit"){
		DialogSetPositionRelativeToUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "DialogSetPositionRelativeToUnitWithAnchor"){
		DialogSetPositionRelativeToUnitWithAnchor(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]));
	}
	else if(function == "DialogSetFullscreen"){
		DialogSetFullscreen(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "DialogDestroyAll"){
		DialogDestroyAll();
	}
	else if(function == "DialogDestroy"){
		DialogDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "DialogSetSubtitlePositionOverride"){
		DialogSetSubtitlePositionOverride(libGalExe_int(player, params[0]));
	}
	else if(function == "DialogClearSubtitlePositionOverride"){
		DialogClearSubtitlePositionOverride();
	}
	else if(function == "DialogSetEnabled"){
		DialogSetEnabled(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "DialogSetOffscreen"){
		DialogSetOffscreen(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "DialogSetImageVisible"){
		DialogSetImageVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "DialogSetTransparency"){
		DialogSetTransparency(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "DialogSetChannel"){
		DialogSetChannel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "DialogSetRenderPriority"){
		DialogSetRenderPriority(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "DialogSetObservedType"){
		DialogSetObservedType(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "DialogControlCreate"){
		DialogControlCreate(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "DialogControlCreateInPanel"){
		DialogControlCreateInPanel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "DialogControlCreateFromTemplate"){
		DialogControlCreateFromTemplate(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "DialogControlCreateInPanelFromTemplate"){
		DialogControlCreateInPanelFromTemplate(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "DialogControlHookup"){
		DialogControlHookup(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "DialogControlHookupStandard"){
		DialogControlHookupStandard(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "DialogControlHookupUnitStatus"){
		DialogControlHookupUnitStatus(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]));
	}
	else if(function == "DialogControlSetVisible"){
		DialogControlSetVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "DialogControlSetEnabled"){
		DialogControlSetEnabled(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemText"){
		libNtve_gf_SetDialogItemText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DialogControlSetObservedType"){
		DialogControlSetObservedType(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_CreateDialogItemAchievement"){
		libNtve_gf_CreateDialogItemAchievement(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_text(player, params[6]), libGalExe_string(player, params[7]));
	}
	else if(function == "libNtve_gf_CreateDialogItemButton"){
		libNtve_gf_CreateDialogItemButton(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_text(player, params[6]), libGalExe_text(player, params[7]), libGalExe_string(player, params[8]));
	}
	else if(function == "libNtve_gf_CreateDialogItemCheckBox"){
		libNtve_gf_CreateDialogItemCheckBox(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_text(player, params[6]), libGalExe_bool(player, params[7]));
	}
	else if(function == "libNtve_gf_CreateDialogItemImage"){
		libNtve_gf_CreateDialogItemImage(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_text(player, params[6]), libGalExe_string(player, params[7]), libGalExe_int(player, params[8]), libGalExe_bool(player, params[9]), libGalExe_color(player, params[10]), libGalExe_int(player, params[11]));
	}
	else if(function == "libNtve_gf_CreateDialogItemLabel"){
		libNtve_gf_CreateDialogItemLabel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_text(player, params[6]), libGalExe_color(player, params[7]), libGalExe_bool(player, params[8]), libGalExe_fixed(player, params[9]));
	}
	else if(function == "DialogControlSetPosition"){
		DialogControlSetPosition(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "DialogControlSetPositionRelative"){
		DialogControlSetPositionRelative(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_int(player, params[6]));
	}
	else if(function == "libNtve_gf_SetDialogItemRotation"){
		libNtve_gf_SetDialogItemRotation(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemtoUseAspectUncorrection"){
		libNtve_gf_SetDialogItemtoUseAspectUncorrection(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DialogControlSetFullDialog"){
		DialogControlSetFullDialog(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "DialogControlSetSize"){
		DialogControlSetSize(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsText"){
		DialogControlSetPropertyAsText(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_text(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsString"){
		DialogControlSetPropertyAsString(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsInt"){
		DialogControlSetPropertyAsInt(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsFixed"){
		DialogControlSetPropertyAsFixed(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsBool"){
		DialogControlSetPropertyAsBool(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsColor"){
		DialogControlSetPropertyAsColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_color(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsControl"){
		DialogControlSetPropertyAsControl(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsUnit"){
		DialogControlSetPropertyAsUnit(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_unit(player, params[3]));
	}
	else if(function == "DialogControlSetPropertyAsUnitGroup"){
		DialogControlSetPropertyAsUnitGroup(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_unitgroup(player, params[3]));
	}
	else if(function == "libNtve_gf_SetDialogItemCurrentValue"){
		libNtve_gf_SetDialogItemCurrentValue(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemMinimumValue"){
		libNtve_gf_SetDialogItemMinimumValue(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemMaximumValue"){
		libNtve_gf_SetDialogItemMaximumValue(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemChecked"){
		libNtve_gf_SetDialogItemChecked(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemEditorValue"){
		libNtve_gf_SetDialogItemEditorValue(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DialogControlAddItem"){
		DialogControlAddItem(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "DialogControlSelectItem"){
		DialogControlSelectItem(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DialogControlClearSelectedItem"){
		DialogControlClearSelectedItem(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "DialogControlRemoveItem"){
		DialogControlRemoveItem(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "DialogControlRemoveAllItems"){
		DialogControlRemoveAllItems(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "DialogControlAddDataPoint"){
		DialogControlAddDataPoint(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "DialogControlRemoveAllDataPoints"){
		DialogControlRemoveAllDataPoints(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "DialogControlSetDataColor"){
		DialogControlSetDataColor(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_color(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "DialogControlSetDataName"){
		DialogControlSetDataName(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_text(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "DialogControlSetMinXVisible"){
		DialogControlSetMinXVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "DialogControlSetMaxXVisible"){
		DialogControlSetMaxXVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "DialogControlSetMinYVisible"){
		DialogControlSetMinYVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "DialogControlSetMaxYVisible"){
		DialogControlSetMaxYVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "DialogControlSetAnimationState"){
		DialogControlSetAnimationState(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "DialogSetSubtitlePositionOverrideControl"){
		DialogSetSubtitlePositionOverrideControl(libGalExe_int(player, params[0]));
	}
	else if(function == "DialogClearSubtitlePositionOverrideControl"){
		DialogClearSubtitlePositionOverrideControl();
	}
	else if(function == "DialogControlDestroyAll"){
		DialogControlDestroyAll(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_SetDialogItemColor"){
		libNtve_gf_SetDialogItemColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemStyle"){
		libNtve_gf_SetDialogItemStyle(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTextWriteout"){
		libNtve_gf_SetDialogItemTextWriteout(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTextWriteoutDuration"){
		libNtve_gf_SetDialogItemTextWriteoutDuration(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTooltip"){
		libNtve_gf_SetDialogItemTooltip(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DialogControlDestroy"){
		DialogControlDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_SetDialogItemImage"){
		libNtve_gf_SetDialogItemImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemImage2"){
		libNtve_gf_SetDialogItemImage2(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemImageType"){
		libNtve_gf_SetDialogItemImageType(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemBlendMode"){
		libNtve_gf_SetDialogItemBlendMode(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemImageType2"){
		libNtve_gf_SetDialogItemImageType2(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DialogSetImage"){
		DialogSetImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "DialogControlFadeTransparency"){
		DialogControlFadeTransparency(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "libNtve_gf_SetDialogItemFlash"){
		libNtve_gf_SetDialogItemFlash(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemCutscene"){
		libNtve_gf_SetDialogItemCutscene(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "DialogControlInvokeAsText"){
		DialogControlInvokeAsText(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_text(player, params[3]), libGalExe_text(player, params[4]), libGalExe_text(player, params[5]), libGalExe_text(player, params[6]));
	}
	else if(function == "DialogControlInvokeAsString"){
		DialogControlInvokeAsString(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]), libGalExe_string(player, params[5]), libGalExe_string(player, params[6]));
	}
	else if(function == "DialogControlSendAnimationEvent"){
		DialogControlSendAnimationEvent(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "DialogControlSetAnimationSpeed"){
		DialogControlSetAnimationSpeed(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "DialogControlSetAnimationTime"){
		DialogControlSetAnimationTime(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "DialogControlAdvanceAnimation"){
		DialogControlAdvanceAnimation(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "DialogControlForceTransition"){
		DialogControlForceTransition(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "DialogControlRequestFocus"){
		DialogControlRequestFocus(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "libNtve_gf_SetDialogItemAchievement"){
		libNtve_gf_SetDialogItemAchievement(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemRenderPriority"){
		libNtve_gf_SetDialogItemRenderPriority(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemClickOnDown"){
		libNtve_gf_SetDialogItemClickOnDown(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemToggled"){
		libNtve_gf_SetDialogItemToggled(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemMovie"){
		libNtve_gf_SetDialogItemMovie(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemDesaturated"){
		libNtve_gf_SetDialogItemDesaturated(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemDesaturationColor"){
		libNtve_gf_SetDialogItemDesaturationColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemCustomTooltip"){
		libNtve_gf_SetDialogItemCustomTooltip(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemUnit"){
		libNtve_gf_SetDialogItemUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemModel"){
		libNtve_gf_SetDialogItemModel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAnimation"){
		libNtve_gf_SetDialogItemAnimation(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemCamera"){
		libNtve_gf_SetDialogItemCamera(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemBorderVisible"){
		libNtve_gf_SetDialogItemBorderVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemBorderImage"){
		libNtve_gf_SetDialogItemBorderImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemBackgroundVisible"){
		libNtve_gf_SetDialogItemBackgroundVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemUseTransition"){
		libNtve_gf_SetDialogItemUseTransition(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemMuted"){
		libNtve_gf_SetDialogItemMuted(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemPaused"){
		libNtve_gf_SetDialogItemPaused(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAcceptMouse"){
		libNtve_gf_SetDialogItemAcceptMouse(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTintColor"){
		libNtve_gf_SetDialogItemTintColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTeamColor"){
		libNtve_gf_SetDialogItemTeamColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemLight"){
		libNtve_gf_SetDialogItemLight(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTransitionModel"){
		libNtve_gf_SetDialogItemTransitionModel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemForceVisible"){
		libNtve_gf_SetDialogItemForceVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemRenderType"){
		libNtve_gf_SetDialogItemRenderType(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemUnitLink"){
		libNtve_gf_SetDialogItemUnitLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemTeamColorIndex"){
		libNtve_gf_SetDialogItemTeamColorIndex(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAnimationDuration"){
		libNtve_gf_SetDialogItemAnimationDuration(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAnimationTime"){
		libNtve_gf_SetDialogItemAnimationTime(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemActor"){
		libNtve_gf_SetDialogItemActor(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemBehavior"){
		libNtve_gf_SetDialogItemBehavior(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemHotkey"){
		libNtve_gf_SetDialogItemHotkey(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAllowedMouseButtons"){
		libNtve_gf_SetDialogItemAllowedMouseButtons(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAlphaMask"){
		libNtve_gf_SetDialogItemAlphaMask(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemAnimationIndex"){
		libNtve_gf_SetDialogItemAnimationIndex(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemHandle"){
		libNtve_gf_SetDialogItemHandle(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemBorderColor"){
		libNtve_gf_SetDialogItemBorderColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemFillColor"){
		libNtve_gf_SetDialogItemFillColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemSubmenu"){
		libNtve_gf_SetDialogItemSubmenu(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemUnitGroup"){
		libNtve_gf_SetDialogItemUnitGroup(libGalExe_int(player, params[0]), libGalExe_unitgroup(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemPlayerId"){
		libNtve_gf_SetDialogItemPlayerId(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemScoreValueLink"){
		libNtve_gf_SetDialogItemScoreValueLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_SetDialogItemStateIndex"){
		libNtve_gf_SetDialogItemStateIndex(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "libNtve_gf_DisplayScreenButton"){
		libNtve_gf_DisplayScreenButton(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_int(player, params[6]), libGalExe_trigger(player, params[7]));
	}
	else if(function == "libNtve_gf_HideScreenButton"){
		libNtve_gf_HideScreenButton(libGalExe_bool(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_FlashScreenButton"){
		libNtve_gf_FlashScreenButton(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_color(player, params[2]), libGalExe_color(player, params[3]));
	}
	else if(function == "libNtve_gf_StopFlashingScreenButton"){
		libNtve_gf_StopFlashingScreenButton(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_SetScreenButtonBorderImage"){
		libNtve_gf_SetScreenButtonBorderImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "libNtve_gf_SetScreenButtonFlashingBorderImage"){
		libNtve_gf_SetScreenButtonFlashingBorderImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "libNtve_gf_DisplayScreenImage"){
		libNtve_gf_DisplayScreenImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_int(player, params[6]), libGalExe_int(player, params[7]));
	}
	else if(function == "libNtve_gf_HideScreenImage"){
		libNtve_gf_HideScreenImage(libGalExe_bool(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_PulseScreenImage"){
		libNtve_gf_PulseScreenImage(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "libNtve_gf_StopPulsingScreenImage"){
		libNtve_gf_StopPulsingScreenImage(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_DisplayScreenLabel"){
		libNtve_gf_DisplayScreenLabel(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_int(player, params[5]), libGalExe_int(player, params[6]), libGalExe_int(player, params[7]));
	}
	else if(function == "libNtve_gf_HideScreenImage2"){
		libNtve_gf_HideScreenImage2(libGalExe_bool(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "GameSetLighting"){
		GameSetLighting(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PlayerSetLighting"){
		PlayerSetLighting(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "GameTimeOfDaySet"){
		GameTimeOfDaySet(libGalExe_string(player, params[0]));
	}
	else if(function == "GameSetToDLighting"){
		GameSetToDLighting(libGalExe_string(player, params[0]));
	}
	else if(function == "PlayerSetToDLighting"){
		PlayerSetToDLighting(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "GameTimeOfDaySetLength"){
		GameTimeOfDaySetLength(libGalExe_fixed(player, params[0]));
	}
	else if(function == "GameTimeOfDayPause"){
		GameTimeOfDayPause(libGalExe_bool(player, params[0]));
	}
	else if(function == "FogSetEnabled"){
		FogSetEnabled(libGalExe_bool(player, params[0]));
	}
	else if(function == "FogSetDisableAtUltra"){
		FogSetDisableAtUltra(libGalExe_bool(player, params[0]));
	}
	else if(function == "FogSetDensity"){
		FogSetDensity(libGalExe_fixed(player, params[0]));
	}
	else if(function == "FogSetColor"){
		FogSetColor(libGalExe_color(player, params[0]));
	}
	else if(function == "FogSetFallOff"){
		FogSetFallOff(libGalExe_fixed(player, params[0]));
	}
	else if(function == "FogSetStartHeight"){
		FogSetStartHeight(libGalExe_fixed(player, params[0]));
	}
	else if(function == "FogSetDensityOverTime"){
		FogSetDensityOverTime(libGalExe_fixed(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "FogSetColorOverTime"){
		FogSetColorOverTime(libGalExe_color(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "FogSetFallOffOverTime"){
		FogSetFallOffOverTime(libGalExe_fixed(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "FogSetStartHeightOverTime"){
		FogSetStartHeightOverTime(libGalExe_fixed(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "GameSetBackground"){
		GameSetBackground(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "EnvironmentShow"){
		EnvironmentShow(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TerrainShowRegion"){
		TerrainShowRegion(libGalExe_region(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "WaterSetState"){
		WaterSetState(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "WaterPause"){
		WaterPause(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CreepSetSpeed"){
		CreepSetSpeed(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "CreepModify"){
		CreepModify(libGalExe_point(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "libNtve_gf_CreateExplosionAtPoint"){
		libNtve_gf_CreateExplosionAtPoint(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "PlayerCreateEffectPoint"){
		PlayerCreateEffectPoint(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "PlayerCreateEffectUnit"){
		PlayerCreateEffectUnit(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]));
	}
	else if(function == "UnitCreateEffectPoint"){
		UnitCreateEffectPoint(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "UnitCreateEffectUnit"){
		UnitCreateEffectUnit(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]));
	}
	else if(function == "UnitDamage"){
		UnitDamage(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "GameDestroyEffects"){
		GameDestroyEffects(libGalExe_point(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "PathAddNoFlyZone"){
		PathAddNoFlyZone(libGalExe_point(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PathRemoveNoFlyZonesInRegion"){
		PathRemoveNoFlyZonesInRegion(libGalExe_region(player, params[0]));
	}
	else if(function == "GameSetSpeedValue"){
		GameSetSpeedValue(libGalExe_int(player, params[0]));
	}
	else if(function == "GameSetQuitOnQuitButton"){
		GameSetQuitOnQuitButton(libGalExe_bool(player, params[0]));
	}
	else if(function == "GameSetGlobalTimeScale"){
		GameSetGlobalTimeScale(libGalExe_fixed(player, params[0]));
	}
	else if(function == "GameSetMissionTimePaused"){
		GameSetMissionTimePaused(libGalExe_bool(player, params[0]));
	}
	else if(function == "GameSetSpeedValueMinimum"){
		GameSetSpeedValueMinimum(libGalExe_int(player, params[0]));
	}
	else if(function == "GameSetSpeedLocked"){
		GameSetSpeedLocked(libGalExe_bool(player, params[0]));
	}
	else if(function == "GameSetSeedLocked"){
		GameSetSeedLocked(libGalExe_bool(player, params[0]));
	}
	else if(function == "GameSetSeed"){
		GameSetSeed(libGalExe_int(player, params[0]));
	}
	else if(function == "GameSaveCreate"){
		GameSaveCreate(libGalExe_text(player, params[0]), libGalExe_text(player, params[1]), libGalExe_string(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "GameSetPauseable"){
		GameSetPauseable(libGalExe_bool(player, params[0]));
	}
	else if(function == "GameSetAbsoluteTimeRemaining"){
		GameSetAbsoluteTimeRemaining(libGalExe_fixed(player, params[0]));
	}
	else if(function == "GameSetAbsoluteTimeRemainingPaused"){
		GameSetAbsoluteTimeRemainingPaused(libGalExe_bool(player, params[0]));
	}
	else if(function == "ConsoleCommand"){
		ConsoleCommand(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "GameCheatAllow"){
		GameCheatAllow(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "GameSetNextCampaignIndex"){
		GameSetNextCampaignIndex(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "GameOver"){
		GameOver(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "RestartGame"){
		RestartGame(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "KickFromGame"){
		KickFromGame(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "GameSetNextMap"){
		GameSetNextMap(libGalExe_string(player, params[0]));
	}
	else if(function == "GameSetTransitionMap"){
		GameSetTransitionMap(libGalExe_string(player, params[0]));
	}
	else if(function == "SetNextMissionDifficulty"){
		SetNextMissionDifficulty(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "AchievementAward"){
		AchievementAward(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "AchievementTermQuantitySet"){
		AchievementTermQuantitySet(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "AchievementTermQuantityAdd"){
		AchievementTermQuantityAdd(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "AchievementErase"){
		AchievementErase(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "AchievementsDisable"){
		AchievementsDisable(libGalExe_int(player, params[0]));
	}
	else if(function == "AchievementPanelSetCategory"){
		AchievementPanelSetCategory(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "GameAddChargeRegen"){
		GameAddChargeRegen(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "libNtve_gf_GameRemoveChargeRegen"){
		libNtve_gf_GameRemoveChargeRegen(libGalExe_string(player, params[0]));
	}
	else if(function == "GameAddChargeRegenRemaining"){
		GameAddChargeRegenRemaining(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "GameAddChargeRegenFull"){
		GameAddChargeRegenFull(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "GameAddChargeUsed"){
		GameAddChargeUsed(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "libNtve_gf_GameRemoveChargeUsed"){
		libNtve_gf_GameRemoveChargeUsed(libGalExe_string(player, params[0]));
	}
	else if(function == "GamePauseAllCharges"){
		GamePauseAllCharges(libGalExe_bool(player, params[0]));
	}
	else if(function == "GameAddCooldown"){
		GameAddCooldown(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "libNtve_gf_GameRemoveCooldown"){
		libNtve_gf_GameRemoveCooldown(libGalExe_string(player, params[0]));
	}
	else if(function == "GamePauseAllCooldowns"){
		GamePauseAllCooldowns(libGalExe_bool(player, params[0]));
	}
	else if(function == "PreloadAsset"){
		PreloadAsset(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadImage"){
		PreloadImage(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadLayout"){
		PreloadLayout(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadModel"){
		PreloadModel(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_PreloadModelAnimation"){
		libNtve_gf_PreloadModelAnimation(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_PreloadModelObject"){
		libNtve_gf_PreloadModelObject(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadMovie"){
		PreloadMovie(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadObject"){
		PreloadObject(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PreloadScene"){
		PreloadScene(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadScript"){
		PreloadScript(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PreloadSound"){
		PreloadSound(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_PreloadSoundObject"){
		libNtve_gf_PreloadSoundObject(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_PreloadSoundtrack"){
		libNtve_gf_PreloadSoundtrack(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_PreloadUnit"){
		libNtve_gf_PreloadUnit(libGalExe_string(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "GameUserDisplayMessage"){
		GameUserDisplayMessage(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "GameUserClearMessages"){
		GameUserClearMessages(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "Wait"){
		Wait(libGalExe_fixed(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BoardCreate"){
		BoardCreate(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]), libGalExe_color(player, params[3]));
	}
	else if(function == "BoardSetName"){
		BoardSetName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]), libGalExe_color(player, params[2]));
	}
	else if(function == "BoardSetAnchor"){
		BoardSetAnchor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BoardSetPosition"){
		BoardSetPosition(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "BoardResetPosition"){
		BoardResetPosition(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_ShowHideLeaderboard"){
		libNtve_gf_ShowHideLeaderboard(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_playergroup(player, params[2]));
	}
	else if(function == "BoardShowAll"){
		BoardShowAll(libGalExe_bool(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "BoardDestroy"){
		BoardDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "BoardItemSetText"){
		BoardItemSetText(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_text(player, params[3]));
	}
	else if(function == "BoardItemSetTextColor"){
		BoardItemSetTextColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_color(player, params[3]));
	}
	else if(function == "BoardItemSetSortValue"){
		BoardItemSetSortValue(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BoardItemSetIcon"){
		BoardItemSetIcon(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "BoardItemSetBackgroundColor"){
		BoardItemSetBackgroundColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_color(player, params[3]));
	}
	else if(function == "BoardItemSetFontSize"){
		BoardItemSetFontSize(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BoardItemSetAlignment"){
		BoardItemSetAlignment(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BoardSort"){
		BoardSort(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BoardSetGroupCount"){
		BoardSetGroupCount(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BoardRowSetGroup"){
		BoardRowSetGroup(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "BoardSetColumnWidth"){
		BoardSetColumnWidth(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "BoardSetRowCount"){
		BoardSetRowCount(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BoardSetColumnCount"){
		BoardSetColumnCount(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BoardSetState"){
		BoardSetState(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "BoardMinimizeShow"){
		BoardMinimizeShow(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BoardMinimizeSetColor"){
		BoardMinimizeSetColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]));
	}
	else if(function == "BoardMinimizeEnable"){
		BoardMinimizeEnable(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BoardMinimizeSetState"){
		BoardMinimizeSetState(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BoardPlayerAdd"){
		BoardPlayerAdd(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BoardPlayerRemove"){
		BoardPlayerRemove(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BoardSetPlayerColumn"){
		BoardSetPlayerColumn(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BoardItemSetProgressShow"){
		BoardItemSetProgressShow(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "BoardItemSetProgressRange"){
		BoardItemSetProgressRange(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "BoardItemSetProgressValue"){
		BoardItemSetProgressValue(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "BoardItemSetProgressColor"){
		BoardItemSetProgressColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_color(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "MeleeInitResources"){
		MeleeInitResources();
	}
	else if(function == "MeleeInitUnits"){
		MeleeInitUnits();
	}
	else if(function == "MeleeInitOptions"){
		MeleeInitOptions();
	}
	else if(function == "MeleeSetOption"){
		MeleeSetOption(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "MeleeInitResourcesForPlayer"){
		MeleeInitResourcesForPlayer(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "MeleeInitUnitsForPlayer"){
		MeleeInitUnitsForPlayer(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "ObjectiveCreate"){
		ObjectiveCreate(libGalExe_text(player, params[0]), libGalExe_text(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "ObjectiveCreateForPlayers"){
		ObjectiveCreateForPlayers(libGalExe_text(player, params[0]), libGalExe_text(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]), libGalExe_playergroup(player, params[4]));
	}
	else if(function == "ObjectiveShow"){
		ObjectiveShow(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "ObjectiveSetState"){
		ObjectiveSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ObjectiveSetPriority"){
		ObjectiveSetPriority(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ObjectiveSetDescription"){
		ObjectiveSetDescription(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ObjectiveSetPlayerGroup"){
		ObjectiveSetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "ObjectiveSetName"){
		ObjectiveSetName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ObjectiveSetPrimary"){
		ObjectiveSetPrimary(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "ObjectiveSetLast"){
		ObjectiveSetLast(libGalExe_int(player, params[0]));
	}
	else if(function == "ObjectiveSetFirst"){
		ObjectiveSetFirst(libGalExe_int(player, params[0]));
	}
	else if(function == "ObjectiveSetAfter"){
		ObjectiveSetAfter(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ObjectiveSetBefore"){
		ObjectiveSetBefore(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ObjectiveDestroy"){
		ObjectiveDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "ObjectiveDestroyAll"){
		ObjectiveDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "OrderSetTargetItem"){
		OrderSetTargetItem(libGalExe_order(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "OrderSetTargetPassenger"){
		OrderSetTargetPassenger(libGalExe_order(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "OrderSetFlag"){
		OrderSetFlag(libGalExe_order(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PingSetPlayerPingsShown"){
		PingSetPlayerPingsShown(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "MinimapPing"){
		MinimapPing(libGalExe_playergroup(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_color(player, params[3]));
	}
	else if(function == "MinimapPingPossibleEnemyStartLocations"){
		MinimapPingPossibleEnemyStartLocations(libGalExe_fixed(player, params[0]), libGalExe_string(player, params[1]), libGalExe_color(player, params[2]));
	}
	else if(function == "PingCreate"){
		PingCreate(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]), libGalExe_color(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "PingCreateWithPlayerId"){
		PingCreateWithPlayerId(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]), libGalExe_color(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_int(player, params[5]));
	}
	else if(function == "PingCreateFromData"){
		PingCreateFromData(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "libNtve_gf_CreatePingFacingAngle"){
		libNtve_gf_CreatePingFacingAngle(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_point(player, params[2]), libGalExe_color(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "PingSetVisible"){
		PingSetVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PingSetPosition"){
		PingSetPosition(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "PingSetRotation"){
		PingSetRotation(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PingSetUnit"){
		PingSetUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "PingSetScale"){
		PingSetScale(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PingSetDepth"){
		PingSetDepth(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PingSetTooltip"){
		PingSetTooltip(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PingSetColor"){
		PingSetColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]));
	}
	else if(function == "PingSetDuration"){
		PingSetDuration(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PingSetModel"){
		PingSetModel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PingSetPlayerGroup"){
		PingSetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PingSetUseUnitTeamColor"){
		PingSetUseUnitTeamColor(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PingSetUseUnitVisibility"){
		PingSetUseUnitVisibility(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PingSetObserver"){
		PingSetObserver(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PingSetUsePlayerVision"){
		PingSetUsePlayerVision(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PingDestroy"){
		PingDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "PingDestroyAll"){
		PingDestroyAll();
	}
	else if(function == "PlayerModifyPropertyInt"){
		PlayerModifyPropertyInt(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "PlayerModifyPropertyFixed"){
		PlayerModifyPropertyFixed(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "PlayerScoreValueSetFromInt"){
		PlayerScoreValueSetFromInt(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "PlayerScoreValueSetFromFixed"){
		PlayerScoreValueSetFromFixed(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PlayerSetState"){
		PlayerSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PlayerSetColorIndex"){
		PlayerSetColorIndex(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PlayerSetRace"){
		PlayerSetRace(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerSetHero"){
		PlayerSetHero(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerSetSkin"){
		PlayerSetSkin(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerSetConsoleSkin"){
		PlayerSetConsoleSkin(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerApplySkin"){
		PlayerApplySkin(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_PlayerApplySkinReplacingExistingUnit"){
		libNtve_gf_PlayerApplySkinReplacingExistingUnit(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PlayerSetMount"){
		PlayerSetMount(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerSetCommander"){
		PlayerSetCommander(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerSetCommanderLevel"){
		PlayerSetCommanderLevel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlayerSetCommanderMasteryLevel"){
		PlayerSetCommanderMasteryLevel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlayerSetDeathTimer"){
		PlayerSetDeathTimer(libGalExe_int(player, params[0]), libGalExe_timer(player, params[1]));
	}
	else if(function == "PlayerSetBounds"){
		PlayerSetBounds(libGalExe_int(player, params[0]), libGalExe_region(player, params[1]));
	}
	else if(function == "PlayerAddTalent"){
		PlayerAddTalent(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerRemoveTalent"){
		PlayerRemoveTalent(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerOptionOverride"){
		PlayerOptionOverride(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "PlayerAddLabel"){
		PlayerAddLabel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerRemoveLabel"){
		PlayerRemoveLabel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerRemoveAllLabels"){
		PlayerRemoveAllLabels(libGalExe_int(player, params[0]));
	}
	else if(function == "PlayerAddReward"){
		PlayerAddReward(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "libNtve_gf_ClearAlliance"){
		libNtve_gf_ClearAlliance(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_MakeAlly"){
		libNtve_gf_MakeAlly(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_SetAlliance"){
		libNtve_gf_SetAlliance(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_SetAllianceOneWay"){
		libNtve_gf_SetAllianceOneWay(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "PlayerSetAlliance"){
		PlayerSetAlliance(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "libNtve_gf_SetPlayerGroupAlliance"){
		libNtve_gf_SetPlayerGroupAlliance(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_SetAllianceBetweenTwoPlayerGroups"){
		libNtve_gf_SetAllianceBetweenTwoPlayerGroups(libGalExe_playergroup(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_SetAllianceAspectForPlayerGroup"){
		libNtve_gf_SetAllianceAspectForPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PlayerSetDifficulty"){
		PlayerSetDifficulty(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlayerAddChargeRegen"){
		PlayerAddChargeRegen(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_PlayerRemoveChargeRegen"){
		libNtve_gf_PlayerRemoveChargeRegen(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerAddChargeRegenRemaining"){
		PlayerAddChargeRegenRemaining(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PlayerAddChargeRegenFull"){
		PlayerAddChargeRegenFull(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PlayerAddChargeUsed"){
		PlayerAddChargeUsed(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_PlayerRemoveChargeUsed"){
		libNtve_gf_PlayerRemoveChargeUsed(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerPauseAllCharges"){
		PlayerPauseAllCharges(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PlayerAddCooldown"){
		PlayerAddCooldown(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_PlayerRemoveCooldown"){
		libNtve_gf_PlayerRemoveCooldown(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlayerPauseAllCooldowns"){
		PlayerPauseAllCooldowns(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PlayerGroupAdd"){
		PlayerGroupAdd(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_AddPlayerGroupToPlayerGroup"){
		libNtve_gf_AddPlayerGroupToPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PlayerGroupRemove"){
		PlayerGroupRemove(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_RemovePlayerGroupFromPlayerGroup"){
		libNtve_gf_RemovePlayerGroupFromPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PlayerGroupClear"){
		PlayerGroupClear(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PointSet"){
		PointSet(libGalExe_point(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "PointSetFacing"){
		PointSetFacing(libGalExe_point(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PointSetHeight"){
		PointSetHeight(libGalExe_point(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "libNtve_gf_HideAllCinematicPortraits"){
		libNtve_gf_HideAllCinematicPortraits(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PortraitCreate"){
		PortraitCreate(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_string(player, params[5]), libGalExe_string(player, params[6]), libGalExe_string(player, params[7]), libGalExe_bool(player, params[8]), libGalExe_bool(player, params[9]));
	}
	else if(function == "PortraitSetVisible"){
		PortraitSetVisible(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "PortraitDestroyAll"){
		PortraitDestroyAll();
	}
	else if(function == "PortraitDestroy"){
		PortraitDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_PortraitSetAnim"){
		libNtve_gf_PortraitSetAnim(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "PortraitSetCamera"){
		PortraitSetCamera(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PortraitSetBorderTexture"){
		PortraitSetBorderTexture(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PortraitSetLight"){
		PortraitSetLight(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PortraitSetModel"){
		PortraitSetModel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PortraitSetModelAnim"){
		PortraitSetModelAnim(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "PortraitSetPosition"){
		PortraitSetPosition(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "PortraitSetSize"){
		PortraitSetSize(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "PortraitSetTransitionModel"){
		PortraitSetTransitionModel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PortraitSetMouseTarget"){
		PortraitSetMouseTarget(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitSetChannel"){
		PortraitSetChannel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PortraitSetRenderType"){
		PortraitSetRenderType(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PortraitSetMuted"){
		PortraitSetMuted(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitSetPaused"){
		PortraitSetPaused(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitSetTintColor"){
		PortraitSetTintColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]));
	}
	else if(function == "PortraitSetTeamColor"){
		PortraitSetTeamColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]));
	}
	else if(function == "PortraitSetActor"){
		PortraitSetActor(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PortraitSetBorderVisible"){
		PortraitSetBorderVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitSetBackgroundVisible"){
		PortraitSetBackgroundVisible(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitSetFullscreen"){
		PortraitSetFullscreen(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitSetOffscreen"){
		PortraitSetOffscreen(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitUseTransition"){
		PortraitUseTransition(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PortraitForceTransition"){
		PortraitForceTransition(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_ClearPortraitAnimation"){
		libNtve_gf_ClearPortraitAnimation(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PortraitWaitForLoad"){
		PortraitWaitForLoad(libGalExe_int(player, params[0]));
	}
	else if(function == "RegionPlayableMapSet"){
		RegionPlayableMapSet(libGalExe_region(player, params[0]));
	}
	else if(function == "RegionAddCircle"){
		RegionAddCircle(libGalExe_region(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_point(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "RegionAddRect"){
		RegionAddRect(libGalExe_region(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "RegionAddRegion"){
		RegionAddRegion(libGalExe_region(player, params[0]), libGalExe_region(player, params[1]));
	}
	else if(function == "RegionAttachToUnit"){
		RegionAttachToUnit(libGalExe_region(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_point(player, params[2]));
	}
	else if(function == "RegionSetCenter"){
		RegionSetCenter(libGalExe_region(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "UnitSelect"){
		UnitSelect(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitSubgroupIndexNext"){
		UnitSubgroupIndexNext(libGalExe_int(player, params[0]));
	}
	else if(function == "UnitSubgroupIndexPrevious"){
		UnitSubgroupIndexPrevious(libGalExe_int(player, params[0]));
	}
	else if(function == "UnitGroupSelect"){
		UnitGroupSelect(libGalExe_unitgroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitClearSelection"){
		UnitClearSelection(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_StoreUnitSelection"){
		libNtve_gf_StoreUnitSelection(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_RestoreUnitSelection"){
		libNtve_gf_RestoreUnitSelection(libGalExe_int(player, params[0]));
	}
	else if(function == "UnitFlashSelection"){
		UnitFlashSelection(libGalExe_unit(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "libNtve_gf_CopyUnitControlGroups"){
		libNtve_gf_CopyUnitControlGroups(libGalExe_unit(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "UnitControlGroupAddUnit"){
		UnitControlGroupAddUnit(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_unit(player, params[2]));
	}
	else if(function == "UnitControlGroupAddUnits"){
		UnitControlGroupAddUnits(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_unitgroup(player, params[2]));
	}
	else if(function == "UnitControlGroupRemoveUnit"){
		UnitControlGroupRemoveUnit(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_unit(player, params[2]));
	}
	else if(function == "UnitControlGroupRemoveUnits"){
		UnitControlGroupRemoveUnits(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_unitgroup(player, params[2]));
	}
	else if(function == "UnitControlGroupClear"){
		UnitControlGroupClear(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "SoundSetReverb"){
		SoundSetReverb(libGalExe_string(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "SoundPlaySceneFile"){
		SoundPlaySceneFile(libGalExe_soundlink(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_string(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "SoundPlayScene"){
		SoundPlayScene(libGalExe_soundlink(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_unitgroup(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "SoundPlay"){
		SoundPlay(libGalExe_soundlink(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "SoundPlayOnUnit"){
		SoundPlayOnUnit(libGalExe_soundlink(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "SoundPlayAtPoint"){
		SoundPlayAtPoint(libGalExe_soundlink(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_point(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "SoundPlayOnUnitForPlayer"){
		SoundPlayOnUnitForPlayer(libGalExe_soundlink(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_unit(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]), libGalExe_fixed(player, params[6]));
	}
	else if(function == "SoundPlayAtPointForPlayer"){
		SoundPlayAtPointForPlayer(libGalExe_soundlink(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_point(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]), libGalExe_fixed(player, params[6]));
	}
	else if(function == "SoundPlayForPlayer"){
		SoundPlayForPlayer(libGalExe_soundlink(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "SoundPause"){
		SoundPause(libGalExe_sound(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "SoundStop"){
		SoundStop(libGalExe_sound(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "SoundSetOffset"){
		SoundSetOffset(libGalExe_sound(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "SoundSetPosition"){
		SoundSetPosition(libGalExe_sound(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "SoundWait"){
		SoundWait(libGalExe_sound(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "SoundSetVolume"){
		SoundSetVolume(libGalExe_sound(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "SoundStopAllTriggerSounds"){
		SoundStopAllTriggerSounds(libGalExe_bool(player, params[0]));
	}
	else if(function == "SoundStopAllModelSounds"){
		SoundStopAllModelSounds();
	}
	else if(function == "SoundSetListenerGender"){
		SoundSetListenerGender(libGalExe_soundlink(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "SoundLengthQuery"){
		SoundLengthQuery(libGalExe_soundlink(player, params[0]));
	}
	else if(function == "SoundLengthQueryWait"){
		SoundLengthQueryWait();
	}
	else if(function == "SoundtrackPlay"){
		SoundtrackPlay(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "SoundtrackPause"){
		SoundtrackPause(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "SoundtrackStopCurrent"){
		SoundtrackStopCurrent(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "SoundtrackStop"){
		SoundtrackStop(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "SoundtrackWait"){
		SoundtrackWait(libGalExe_string(player, params[0]));
	}
	else if(function == "SoundtrackDefault"){
		SoundtrackDefault(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "SoundtrackSetContinuous"){
		SoundtrackSetContinuous(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "SoundtrackSetDelay"){
		SoundtrackSetDelay(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "SoundtrackSetShuffle"){
		SoundtrackSetShuffle(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "SoundChannelMute"){
		SoundChannelMute(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "SoundChannelPause"){
		SoundChannelPause(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "SoundChannelStop"){
		SoundChannelStop(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "SoundChannelSetVolume"){
		SoundChannelSetVolume(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "libNtve_gf_SetAllSoundChannelVolumes"){
		libNtve_gf_SetAllSoundChannelVolumes(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "SoundChannelDSPInsert"){
		SoundChannelDSPInsert(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "SoundChannelDSPRemove"){
		SoundChannelDSPRemove(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "SoundSetFactors"){
		SoundSetFactors(libGalExe_fixed(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "SoundSetReverbForPlayers"){
		SoundSetReverbForPlayers(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_bool(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "SoundPlaySceneForPlayer"){
		SoundPlaySceneForPlayer(libGalExe_soundlink(player, params[0]), libGalExe_int(player, params[1]), libGalExe_playergroup(player, params[2]), libGalExe_unitgroup(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "StatEventCreate"){
		StatEventCreate(libGalExe_string(player, params[0]));
	}
	else if(function == "StatEventAddDataString"){
		StatEventAddDataString(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "StatEventAddDataInt"){
		StatEventAddDataInt(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "StatEventAddDataFixed"){
		StatEventAddDataFixed(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "StatEventSend"){
		StatEventSend(libGalExe_int(player, params[0]));
	}
	else if(function == "PlanetPanelSetContactButtonState"){
		PlanetPanelSetContactButtonState(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlanetPanelSetBackgroundImage"){
		PlanetPanelSetBackgroundImage(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetPanelSetBackButtonEnabled"){
		PlanetPanelSetBackButtonEnabled(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PlanetPanelSetBackButtonText"){
		PlanetPanelSetBackButtonText(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetPanelSetBackButtonShortcut"){
		PlanetPanelSetBackButtonShortcut(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetPanelSetBackButtonTooltip"){
		PlanetPanelSetBackButtonTooltip(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetPanelSetDismissButtonEnabled"){
		PlanetPanelSetDismissButtonEnabled(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PlanetSetSelected"){
		PlanetSetSelected(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlanetClearSelected"){
		PlanetClearSelected(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PlanetDestroyAll"){
		PlanetDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PlanetDestroy"){
		PlanetDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "PlanetCreate"){
		PlanetCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlanetSetPlanetName"){
		PlanetSetPlanetName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetState"){
		PlanetSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PlanetSetPlanetModelLink"){
		PlanetSetPlanetModelLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetSetBackgroundModelLink"){
		PlanetSetBackgroundModelLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetSetPlayerGroup"){
		PlanetSetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PlanetSetDescriptionText"){
		PlanetSetDescriptionText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetTooltipText"){
		PlanetSetTooltipText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetMissionTitle"){
		PlanetSetMissionTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetMissionName"){
		PlanetSetMissionName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetPrimaryObjectiveTitle"){
		PlanetSetPrimaryObjectiveTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetPrimaryObjectiveText"){
		PlanetSetPrimaryObjectiveText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetSecondaryObjectiveText"){
		PlanetSetSecondaryObjectiveText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetSecondaryObjectiveTitle"){
		PlanetSetSecondaryObjectiveTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetRewardTitle"){
		PlanetSetRewardTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetRewardText"){
		PlanetSetRewardText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetResearchTitle"){
		PlanetSetResearchTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetResearchText"){
		PlanetSetResearchText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetBonusTitle"){
		PlanetSetBonusTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetBonusText"){
		PlanetSetBonusText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetPlanetText"){
		PlanetSetPlanetText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetContactTitle"){
		PlanetSetContactTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetContactName"){
		PlanetSetContactName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetContactModelLink"){
		PlanetSetContactModelLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetSetContactActorLink"){
		PlanetSetContactActorLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetSetContactTooltipText"){
		PlanetSetContactTooltipText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetTechnologyTitle"){
		PlanetSetTechnologyTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetTechnologyName"){
		PlanetSetTechnologyName(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetTechnologyText"){
		PlanetSetTechnologyText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PlanetSetTechnologyIconFilePath"){
		PlanetSetTechnologyIconFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetSetTechnologyUnitLink"){
		PlanetSetTechnologyUnitLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PlanetSetTechnologyTooltipText"){
		PlanetSetTechnologyTooltipText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseCategoryCreate"){
		PurchaseCategoryCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseCategoryDestroy"){
		PurchaseCategoryDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "PurchaseCategoryDestroyAll"){
		PurchaseCategoryDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PurchaseCategorySetNameText"){
		PurchaseCategorySetNameText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseCategorySetSlot"){
		PurchaseCategorySetSlot(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseCategorySetPlayerGroup"){
		PurchaseCategorySetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PurchaseCategorySetState"){
		PurchaseCategorySetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseGroupCreate"){
		PurchaseGroupCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "PurchaseGroupDestroy"){
		PurchaseGroupDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "PurchaseGroupDestroyAll"){
		PurchaseGroupDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PurchaseGroupSetNameText"){
		PurchaseGroupSetNameText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseGroupSetTooltipText"){
		PurchaseGroupSetTooltipText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseGroupSetSlot"){
		PurchaseGroupSetSlot(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseGroupSetUnitLink"){
		PurchaseGroupSetUnitLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PurchaseGroupSetIconFilePath"){
		PurchaseGroupSetIconFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PurchaseGroupSetPlayerGroup"){
		PurchaseGroupSetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PurchaseGroupSetState"){
		PurchaseGroupSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseItemCreate"){
		PurchaseItemCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "PurchaseItemDestroy"){
		PurchaseItemDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "PurchaseItemDestroyAll"){
		PurchaseItemDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PurchaseItemSetNameText"){
		PurchaseItemSetNameText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseItemSetTooltipText"){
		PurchaseItemSetTooltipText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseItemSetDescriptionText"){
		PurchaseItemSetDescriptionText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "PurchaseItemSetCost"){
		PurchaseItemSetCost(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseItemSetSlot"){
		PurchaseItemSetSlot(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseItemSetIconFilePath"){
		PurchaseItemSetIconFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PurchaseItemSetMovieFilePath"){
		PurchaseItemSetMovieFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "PurchaseItemSetPlayerGroup"){
		PurchaseItemSetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "PurchaseItemSetState"){
		PurchaseItemSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseItemSetRecentlyPurchased"){
		PurchaseItemSetRecentlyPurchased(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PurchaseSetSelectedPurchaseCategory"){
		PurchaseSetSelectedPurchaseCategory(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseSetSelectedPurchaseItem"){
		PurchaseSetSelectedPurchaseItem(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "PurchaseItemPurchase"){
		PurchaseItemPurchase(libGalExe_int(player, params[0]));
	}
	else if(function == "BattleReportCreate"){
		BattleReportCreate(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "BattleReportDestroy"){
		BattleReportDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "BattleReportSetMissionText"){
		BattleReportSetMissionText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetMissionImage"){
		BattleReportSetMissionImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BattleReportSetSceneImage"){
		BattleReportSetSceneImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BattleReportSetSceneText"){
		BattleReportSetSceneText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetDifficultyLevelBestTimeText"){
		BattleReportSetDifficultyLevelBestTimeText(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "BattleReportSetDifficultyLevelCompleted"){
		BattleReportSetDifficultyLevelCompleted(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "BattleReportAddAchievement"){
		BattleReportAddAchievement(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BattleReportSetBestTimeText"){
		BattleReportSetBestTimeText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetResearchTitle"){
		BattleReportSetResearchTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetResearchText"){
		BattleReportSetResearchText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetBonusTitle"){
		BattleReportSetBonusTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetBonusText"){
		BattleReportSetBonusText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetButtonText"){
		BattleReportSetButtonText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "BattleReportSetButtonImage"){
		BattleReportSetButtonImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "BattleReportSetPriority"){
		BattleReportSetPriority(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BattleReportSetState"){
		BattleReportSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "BattleReportSetShownInMissionTotal"){
		BattleReportSetShownInMissionTotal(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "BattleReportPanelSetSelectedBattleReport"){
		BattleReportPanelSetSelectedBattleReport(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchTierCreate"){
		ResearchTierCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "ResearchTierDestroy"){
		ResearchTierDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "ResearchTierDestroyAll"){
		ResearchTierDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "ResearchTierSetRequiredLevel"){
		ResearchTierSetRequiredLevel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchTierSetMaxPurchasesAllowed"){
		ResearchTierSetMaxPurchasesAllowed(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchCategoryCreate"){
		ResearchCategoryCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchCategoryDestroy"){
		ResearchCategoryDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "ResearchCategoryDestroyAll"){
		ResearchCategoryDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "ResearchCategorySetNameText"){
		ResearchCategorySetNameText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ResearchCategorySetCurrentLevel"){
		ResearchCategorySetCurrentLevel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchCategorySetLastLevel"){
		ResearchCategorySetLastLevel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchItemCreate"){
		ResearchItemCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "ResearchItemDestroy"){
		ResearchItemDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "ResearchItemPurchase"){
		ResearchItemPurchase(libGalExe_int(player, params[0]));
	}
	else if(function == "ResearchItemSetState"){
		ResearchItemSetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "ResearchItemSetIconFilePath"){
		ResearchItemSetIconFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ResearchItemSetMovieFilePath"){
		ResearchItemSetMovieFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "ResearchItemSetNameText"){
		ResearchItemSetNameText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ResearchItemSetDescriptionText"){
		ResearchItemSetDescriptionText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ResearchItemSetTooltipText"){
		ResearchItemSetTooltipText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ResearchItemSetConfirmationText"){
		ResearchItemSetConfirmationText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "ResearchItemSetRecentlyPurchased"){
		ResearchItemSetRecentlyPurchased(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "ResearchItemSetSelected"){
		ResearchItemSetSelected(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "MercenaryCreate"){
		MercenaryCreate(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "MercenaryDestroy"){
		MercenaryDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "MercenarySetTitleText"){
		MercenarySetTitleText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "MercenarySetUnitText"){
		MercenarySetUnitText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "MercenarySetCostText"){
		MercenarySetCostText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "MercenarySetDescriptionText"){
		MercenarySetDescriptionText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "MercenarySetSpecialText"){
		MercenarySetSpecialText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "MercenarySetAvailabilityText"){
		MercenarySetAvailabilityText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "MercenarySetCost"){
		MercenarySetCost(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "MercenarySetState"){
		MercenarySetState(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "MercenarySetImageFilePath"){
		MercenarySetImageFilePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "MercenarySetModelLink"){
		MercenarySetModelLink(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "MercenarySetScenePath"){
		MercenarySetScenePath(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "MercenarySetPlayerGroup"){
		MercenarySetPlayerGroup(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "MercenarySetRecentlyPurchased"){
		MercenarySetRecentlyPurchased(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "MercenaryPurchase"){
		MercenaryPurchase(libGalExe_int(player, params[0]));
	}
	else if(function == "MercenarySetSelected"){
		MercenarySetSelected(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "MercenaryPanelSetCloseButtonEnabled"){
		MercenaryPanelSetCloseButtonEnabled(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "MercenaryPanelSetDismissButtonEnabled"){
		MercenaryPanelSetDismissButtonEnabled(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "VictoryPanelSetVictoryText"){
		VictoryPanelSetVictoryText(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetMissionTitle"){
		VictoryPanelSetMissionTitle(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetMissionText"){
		VictoryPanelSetMissionText(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetMissionTimeTitle"){
		VictoryPanelSetMissionTimeTitle(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetMissionTimeText"){
		VictoryPanelSetMissionTimeText(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetRewardTitle"){
		VictoryPanelSetRewardTitle(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetRewardText"){
		VictoryPanelSetRewardText(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetRewardCredits"){
		VictoryPanelSetRewardCredits(libGalExe_int(player, params[0]));
	}
	else if(function == "VictoryPanelSetAchievementsTitle"){
		VictoryPanelSetAchievementsTitle(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelAddAchievement"){
		VictoryPanelAddAchievement(libGalExe_string(player, params[0]));
	}
	else if(function == "VictoryPanelSetStatisticsTitle"){
		VictoryPanelSetStatisticsTitle(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelAddTrackedStatistic"){
		VictoryPanelAddTrackedStatistic(libGalExe_string(player, params[0]));
	}
	else if(function == "PlayerScoreValueEnableAll"){
		PlayerScoreValueEnableAll(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "PlayerScoreValueEnable"){
		PlayerScoreValueEnable(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "VictoryPanelAddCustomStatisticLine"){
		VictoryPanelAddCustomStatisticLine(libGalExe_text(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "VictoryPanelSetCustomStatisticText"){
		VictoryPanelSetCustomStatisticText(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelSetCustomStatisticValue"){
		VictoryPanelSetCustomStatisticValue(libGalExe_text(player, params[0]));
	}
	else if(function == "VictoryPanelClearCustomStatisticTable"){
		VictoryPanelClearCustomStatisticTable();
	}
	else if(function == "VictoryPanelSetPlanetModelLink"){
		VictoryPanelSetPlanetModelLink(libGalExe_string(player, params[0]));
	}
	else if(function == "VictoryPanelSetBackgroundFilePath"){
		VictoryPanelSetBackgroundFilePath(libGalExe_string(player, params[0]));
	}
	else if(function == "VictoryPanelSetSummaryBackgroundFilePath"){
		VictoryPanelSetSummaryBackgroundFilePath(libGalExe_string(player, params[0]));
	}
	else if(function == "CharacterSheetPanelSetPortraitModelLink"){
		CharacterSheetPanelSetPortraitModelLink(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "CharacterSheetPanelSetNameText"){
		CharacterSheetPanelSetNameText(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "CharacterSheetPanelSetDescriptionText"){
		CharacterSheetPanelSetDescriptionText(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "CampaignProgressSetText"){
		CampaignProgressSetText(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "CampaignProgressSetImageFilePath"){
		CampaignProgressSetImageFilePath(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "CampaignProgressSetTutorialFinished"){
		CampaignProgressSetTutorialFinished(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "CampaignProgressSetCampaignFinished"){
		CampaignProgressSetCampaignFinished(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "CampaignProgressDeleteCampaignSave"){
		CampaignProgressDeleteCampaignSave(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "CampaignProgressEnableCampaignSaves"){
		CampaignProgressEnableCampaignSaves(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "CampaignProgressEnableCampaignCompletedSaves"){
		CampaignProgressEnableCampaignCompletedSaves(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__StoryModeOnOffForPlayer"){
		libNtve_gf__StoryModeOnOffForPlayer(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__StoryModeOnOffForPlayerGroup"){
		libNtve_gf__StoryModeOnOffForPlayerGroup(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "StoryMode"){
		StoryMode(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf__StoryModeHideUI"){
		libNtve_gf__StoryModeHideUI(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "libNtve_gf__StoryModeRestoreUI"){
		libNtve_gf__StoryModeRestoreUI(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "CampaignMode"){
		CampaignMode(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "StoryCreatePlanetPanel"){
		StoryCreatePlanetPanel();
	}
	else if(function == "libNtve_gf_StoryMode"){
		libNtve_gf_StoryMode(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "StorySetChange"){
		StorySetChange();
	}
	else if(function == "TextExpressionSetToken"){
		TextExpressionSetToken(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "TalentTreeSetSelectedHeroTalentTree"){
		TalentTreeSetSelectedHeroTalentTree(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "TalentTreeClearTier"){
		TalentTreeClearTier(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "SetTalentTierEnabled"){
		SetTalentTierEnabled(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "SetTalentUpgradeRequired"){
		SetTalentUpgradeRequired(libGalExe_bool(player, params[0]));
	}
	else if(function == "SetTalentsEnabled"){
		SetTalentsEnabled(libGalExe_bool(player, params[0]));
	}
	else if(function == "SetTalentTreeSelectionPanelDismissAllowed"){
		SetTalentTreeSelectionPanelDismissAllowed(libGalExe_bool(player, params[0]));
	}
	else if(function == "SetTalentTreeSelectionPanelAutoShow"){
		SetTalentTreeSelectionPanelAutoShow(libGalExe_bool(player, params[0]));
	}
	else if(function == "SetTalentTreePauseGameWhenSelectionPanelShown"){
		SetTalentTreePauseGameWhenSelectionPanelShown(libGalExe_bool(player, params[0]));
	}
	else if(function == "SetTalentTreeHeroLevel"){
		SetTalentTreeHeroLevel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "TechTreeSpecificRequirementEnable"){
		TechTreeSpecificRequirementEnable(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeBehaviorAllow"){
		TechTreeBehaviorAllow(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeAbilityAllow"){
		TechTreeAbilityAllow(libGalExe_int(player, params[0]), libGalExe_abilcmd(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeUnitAllow"){
		TechTreeUnitAllow(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeUpgradeAllow"){
		TechTreeUpgradeAllow(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeUpgradeAddLevel"){
		TechTreeUpgradeAddLevel(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_SetUpgradeLevelForPlayer"){
		libNtve_gf_SetUpgradeLevelForPlayer(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "TechTreeSetProduceCap"){
		TechTreeSetProduceCap(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "TechTreeRequirementsEnable"){
		TechTreeRequirementsEnable(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TechTreeRestrictionsEnable"){
		TechTreeRestrictionsEnable(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TextTagCreate"){
		TextTagCreate(libGalExe_text(player, params[0]), libGalExe_int(player, params[1]), libGalExe_point(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_bool(player, params[4]), libGalExe_bool(player, params[5]), libGalExe_playergroup(player, params[6]));
	}
	else if(function == "TextTagShow"){
		TextTagShow(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TextTagPause"){
		TextTagPause(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TextTagAttachToUnit"){
		TextTagAttachToUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagAttachToUnitPoint"){
		TextTagAttachToUnitPoint(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "TextTagDestroy"){
		TextTagDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "TextTagSetPosition"){
		TextTagSetPosition(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagSetVelocity"){
		TextTagSetVelocity(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagSetGravity"){
		TextTagSetGravity(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "TextTagSetText"){
		TextTagSetText(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "TextTagSetTime"){
		TextTagSetTime(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagSetAlignment"){
		TextTagSetAlignment(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "TextTagSetTextAlignment"){
		TextTagSetTextAlignment(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "TextTagSetBackgroundBorderSize"){
		TextTagSetBackgroundBorderSize(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagSetBackgroundImage"){
		TextTagSetBackgroundImage(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TextTagSetBackgroundOffset"){
		TextTagSetBackgroundOffset(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagSetEdgeImage"){
		TextTagSetEdgeImage(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "TextTagSetColor"){
		TextTagSetColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_color(player, params[2]));
	}
	else if(function == "TextTagFogofWar"){
		TextTagFogofWar(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TextTagSetFogVisibility"){
		TextTagSetFogVisibility(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "TextTagSetFadedTransparency"){
		TextTagSetFadedTransparency(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagSetFontSize"){
		TextTagSetFontSize(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "TextTagSetMaxSize"){
		TextTagSetMaxSize(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "TextTagShowBackground"){
		TextTagShowBackground(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TextTagSetTextShadow"){
		TextTagSetTextShadow(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "SetScoreTimer"){
		SetScoreTimer(libGalExe_timer(player, params[0]));
	}
	else if(function == "TimerStart"){
		TimerStart(libGalExe_timer(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "TimerRestart"){
		TimerRestart(libGalExe_timer(player, params[0]));
	}
	else if(function == "TimerPause"){
		TimerPause(libGalExe_timer(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_StopTimer"){
		libNtve_gf_StopTimer(libGalExe_timer(player, params[0]));
	}
	else if(function == "TimerWindowCreate"){
		TimerWindowCreate(libGalExe_timer(player, params[0]), libGalExe_text(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "TimerWindowShow"){
		TimerWindowShow(libGalExe_int(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TimerWindowDestroy"){
		TimerWindowDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "TimerWindowSetAnchor"){
		TimerWindowSetAnchor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "TimerWindowSetPosition"){
		TimerWindowSetPosition(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "TimerWindowResetPosition"){
		TimerWindowResetPosition(libGalExe_int(player, params[0]));
	}
	else if(function == "TimerWindowSetTitle"){
		TimerWindowSetTitle(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "TimerWindowSetTimer"){
		TimerWindowSetTimer(libGalExe_int(player, params[0]), libGalExe_timer(player, params[1]));
	}
	else if(function == "TimerWindowSetFormat"){
		TimerWindowSetFormat(libGalExe_int(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "TimerWindowSetStyle"){
		TimerWindowSetStyle(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TimerWindowSetGapWidth"){
		TimerWindowSetGapWidth(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "TimerWindowSetFixedHeight"){
		TimerWindowSetFixedHeight(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "TimerWindowSetColor"){
		TimerWindowSetColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_color(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "TimerWindowShowBorder"){
		TimerWindowShowBorder(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TimerWindowShowProgressBar"){
		TimerWindowShowProgressBar(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TimerWindowSetProgressColor"){
		TimerWindowSetProgressColor(libGalExe_int(player, params[0]), libGalExe_color(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "TimerWindowSetImageType"){
		TimerWindowSetImageType(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "TransmissionSendForPlayer"){
		TransmissionSendForPlayer(libGalExe_playergroup(player, params[0]), libGalExe_transmissionsource(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]), libGalExe_soundlink(player, params[5]), libGalExe_text(player, params[6]), libGalExe_text(player, params[7]), libGalExe_fixed(player, params[8]), libGalExe_int(player, params[9]), libGalExe_bool(player, params[10]), libGalExe_int(player, params[11]));
	}
	else if(function == "TransmissionSendForPlayerSelect"){
		TransmissionSendForPlayerSelect(libGalExe_playergroup(player, params[0]), libGalExe_transmissionsource(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]), libGalExe_soundlink(player, params[5]), libGalExe_text(player, params[6]), libGalExe_text(player, params[7]), libGalExe_fixed(player, params[8]), libGalExe_int(player, params[9]), libGalExe_bool(player, params[10]), libGalExe_int(player, params[11]), libGalExe_bool(player, params[12]));
	}
	else if(function == "libNtve_gf_SendTransmissionSimple"){
		libNtve_gf_SendTransmissionSimple(libGalExe_transmissionsource(player, params[0]), libGalExe_int(player, params[1]), libGalExe_soundlink(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_int(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "TransmissionWait"){
		TransmissionWait(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "TransmissionClear"){
		TransmissionClear(libGalExe_int(player, params[0]));
	}
	else if(function == "TransmissionClearAll"){
		TransmissionClearAll();
	}
	else if(function == "TransmissionClearGroup"){
		TransmissionClearGroup(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "TransmissionIsComplete"){
		TransmissionIsComplete(libGalExe_int(player, params[0]));
	}
	else if(function == "TransmissionSetOption"){
		TransmissionSetOption(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TransmissionSourceSetPauseAllowed"){
		TransmissionSourceSetPauseAllowed(libGalExe_transmissionsource(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TransmissionSourceSetStreamingAllowed"){
		TransmissionSourceSetStreamingAllowed(libGalExe_transmissionsource(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TransmissionSourceSetBypassMessageLog"){
		TransmissionSourceSetBypassMessageLog(libGalExe_transmissionsource(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TransmissionSendAdvanced"){
		TransmissionSendAdvanced(libGalExe_playergroup(player, params[0]), libGalExe_transmissionsource(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]), libGalExe_soundlink(player, params[5]), libGalExe_text(player, params[6]), libGalExe_text(player, params[7]), libGalExe_fixed(player, params[8]), libGalExe_int(player, params[9]), libGalExe_bool(player, params[10]));
	}
	else if(function == "TransmissionSend"){
		TransmissionSend(libGalExe_playergroup(player, params[0]), libGalExe_transmissionsource(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]), libGalExe_soundlink(player, params[4]), libGalExe_text(player, params[5]), libGalExe_text(player, params[6]), libGalExe_fixed(player, params[7]), libGalExe_int(player, params[8]), libGalExe_bool(player, params[9]));
	}
	else if(function == "TriggerExecute"){
		TriggerExecute(libGalExe_trigger(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TriggerStop"){
		TriggerStop(libGalExe_trigger(player, params[0]));
	}
	else if(function == "TriggerDestroy"){
		TriggerDestroy(libGalExe_trigger(player, params[0]));
	}
	else if(function == "TriggerEnable"){
		TriggerEnable(libGalExe_trigger(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TriggerWaitForTrigger"){
		TriggerWaitForTrigger(libGalExe_trigger(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TriggerCurrentTriggerThreadSetFlags"){
		TriggerCurrentTriggerThreadSetFlags(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "TriggerSkippableBegin"){
		TriggerSkippableBegin(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_trigger(player, params[2]), libGalExe_bool(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "TriggerSendEvent"){
		TriggerSendEvent(libGalExe_string(player, params[0]));
	}
	else if(function == "TriggerQueuePause"){
		TriggerQueuePause(libGalExe_bool(player, params[0]));
	}
	else if(function == "TriggerQueueClear"){
		TriggerQueueClear(libGalExe_int(player, params[0]));
	}
	else if(function == "SetHeroLeaderPanelEnabled"){
		SetHeroLeaderPanelEnabled(libGalExe_bool(player, params[0]));
	}
	else if(function == "UISetResourceTradeCountdownTime"){
		UISetResourceTradeCountdownTime(libGalExe_int(player, params[0]));
	}
	else if(function == "UISetResourceTradingAllowed"){
		UISetResourceTradingAllowed(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UISetResourceTradingMinorStep"){
		UISetResourceTradingMinorStep(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UISetResourceTradingMajorStep"){
		UISetResourceTradingMajorStep(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UIDisplayMessage"){
		UIDisplayMessage(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UIClearMessages"){
		UIClearMessages(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UIShowCinematicText"){
		UIShowCinematicText(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_soundlink(player, params[4]));
	}
	else if(function == "UIHideCinematicText"){
		UIHideCinematicText(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UIShowTextCrawl"){
		UIShowTextCrawl(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_soundlink(player, params[4]), libGalExe_soundlink(player, params[5]));
	}
	else if(function == "UIHideTextCrawl"){
		UIHideTextCrawl(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "libNtve_gf_UIErrorMessage"){
		libNtve_gf_UIErrorMessage(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_soundlink(player, params[2]));
	}
	else if(function == "libNtve_gf__BB_HPBarChange"){
		libNtve_gf__BB_HPBarChange(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_DisplayBossBar"){
		libNtve_gf_DisplayBossBar(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_text(player, params[2]), libGalExe_int(player, params[3]), libGalExe_playergroup(player, params[4]));
	}
	else if(function == "libNtve_gf_SetBossBarMaximumValue"){
		libNtve_gf_SetBossBarMaximumValue(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_SetBossBarCurrentValue"){
		libNtve_gf_SetBossBarCurrentValue(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_SetBossBarBoss"){
		libNtve_gf_SetBossBarBoss(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_SetBossBarRace"){
		libNtve_gf_SetBossBarRace(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_MoveBossBar"){
		libNtve_gf_MoveBossBar(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "libNtve_gf_ShowHideBossBar"){
		libNtve_gf_ShowHideBossBar(libGalExe_bool(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_RefreshBossBar"){
		libNtve_gf_RefreshBossBar(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf__StoreGameUIVisibleStates"){
		libNtve_gf__StoreGameUIVisibleStates(libGalExe_bool(player, params[0]), libGalExe_playergroup(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UISetMode"){
		UISetMode(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UISetMinimumLetterboxHeight"){
		UISetMinimumLetterboxHeight(libGalExe_int(player, params[0]));
	}
	else if(function == "libNtve_gf_HideGameUI"){
		libNtve_gf_HideGameUI(libGalExe_bool(player, params[0]), libGalExe_playergroup(player, params[1]));
	}
	else if(function == "libNtve_gf_AddRemoveUIFrameTypeForGlobalFilterList"){
		libNtve_gf_AddRemoveUIFrameTypeForGlobalFilterList(libGalExe_bool(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UISetFrameVisible"){
		UISetFrameVisible(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UISetBattleNetButtonOffset"){
		UISetBattleNetButtonOffset(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UIClearBattleNetButtonOffset"){
		UIClearBattleNetButtonOffset(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UISetWorldVisible"){
		UISetWorldVisible(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "AchievementPanelSetVisible"){
		AchievementPanelSetVisible(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UISetCursorVisible"){
		UISetCursorVisible(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UISetCursorAutoHide"){
		UISetCursorAutoHide(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UISetDragSelectEnabled"){
		UISetDragSelectEnabled(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UISetHotkeyProfile"){
		UISetHotkeyProfile(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UIUnitColorStyleOverride"){
		UIUnitColorStyleOverride(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UIUnitColorStyleClearOverride"){
		UIUnitColorStyleClearOverride(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UIFlyerHelperOverride"){
		UIFlyerHelperOverride(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UIFlyerHelperClearOverride"){
		UIFlyerHelperClearOverride(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UIStatusBarOverride"){
		UIStatusBarOverride(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UIStatusBarClearOverride"){
		UIStatusBarClearOverride(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UISetAchievementToastStyle"){
		UISetAchievementToastStyle(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UISetMiniMapBackGroundColor"){
		UISetMiniMapBackGroundColor(libGalExe_color(player, params[0]));
	}
	else if(function == "UISetMiniMapCameraFoVVisible"){
		UISetMiniMapCameraFoVVisible(libGalExe_bool(player, params[0]));
	}
	else if(function == "UISetMiniMapBounds"){
		UISetMiniMapBounds(libGalExe_playergroup(player, params[0]), libGalExe_region(player, params[1]));
	}
	else if(function == "UISetCommandAllowed"){
		UISetCommandAllowed(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UISetButtonHighlighted"){
		UISetButtonHighlighted(libGalExe_playergroup(player, params[0]), libGalExe_abilcmd(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UISetButtonFaceHighlighted"){
		UISetButtonFaceHighlighted(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UISetCommandDisallowedMessage"){
		UISetCommandDisallowedMessage(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "UISetResourceVisible"){
		UISetResourceVisible(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UISetSelectionTypeEnabled"){
		UISetSelectionTypeEnabled(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UILaunchNydusLink"){
		UILaunchNydusLink(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UIMessageLogPanelSetVisible"){
		UIMessageLogPanelSetVisible(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UISetTargetingOrder"){
		UISetTargetingOrder(libGalExe_playergroup(player, params[0]), libGalExe_unitgroup(player, params[1]), libGalExe_order(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "UISetHotkeyAllowed"){
		UISetHotkeyAllowed(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "HelpPanelDestroyHelpItem"){
		HelpPanelDestroyHelpItem(libGalExe_int(player, params[0]));
	}
	else if(function == "HelpPanelDisplayPage"){
		HelpPanelDisplayPage(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "HelpPanelAddTip"){
		HelpPanelAddTip(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_text(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "HelpPanelDestroyAllTips"){
		HelpPanelDestroyAllTips();
	}
	else if(function == "HelpPanelDestroyAllTutorials"){
		HelpPanelDestroyAllTutorials();
	}
	else if(function == "TipAlertPanelClear"){
		TipAlertPanelClear(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "HelpPanelAddHint"){
		HelpPanelAddHint(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "HelpPanelAddTutorial"){
		HelpPanelAddTutorial(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_string(player, params[3]), libGalExe_string(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "HelpPanelAddMessage"){
		HelpPanelAddMessage(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_string(player, params[3]), libGalExe_soundlink(player, params[4]));
	}
	else if(function == "HelpPanelEnableTechTreeButton"){
		HelpPanelEnableTechTreeButton(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "HelpPanelEnableTechGlossaryButton"){
		HelpPanelEnableTechGlossaryButton(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "HelpPanelShowTechTreeRace"){
		HelpPanelShowTechTreeRace(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeUnitHelp"){
		TechTreeUnitHelp(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "TechTreeUnitHelpDefault"){
		TechTreeUnitHelpDefault(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "HelpPanelSetHelpItemDarkenedWhenViewed"){
		HelpPanelSetHelpItemDarkenedWhenViewed(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UIAlertPoint"){
		UIAlertPoint(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]), libGalExe_string(player, params[3]), libGalExe_point(player, params[4]));
	}
	else if(function == "UIAlertUnit"){
		UIAlertUnit(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]), libGalExe_string(player, params[3]), libGalExe_unit(player, params[4]));
	}
	else if(function == "UIAlert"){
		UIAlert(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "UIAlertClear"){
		UIAlertClear(libGalExe_int(player, params[0]));
	}
	else if(function == "UISetAlertTypeVisible"){
		UISetAlertTypeVisible(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UISetGameMenuItemText"){
		UISetGameMenuItemText(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UISetGameMenuItemShortcut"){
		UISetGameMenuItemShortcut(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UISetGameMenuItemVisible"){
		UISetGameMenuItemVisible(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UIShowCustomMenu"){
		UIShowCustomMenu(libGalExe_playergroup(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "UIShowStandardMenu"){
		UIShowStandardMenu(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UISetCustomMenuItemText"){
		UISetCustomMenuItemText(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UISetCustomMenuItemShortcut"){
		UISetCustomMenuItemShortcut(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UISetCustomMenuItemVisible"){
		UISetCustomMenuItemVisible(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UIClearCustomMenuItemList"){
		UIClearCustomMenuItemList(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "UIShowCustomDialog"){
		UIShowCustomDialog(libGalExe_playergroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_text(player, params[2]), libGalExe_text(player, params[3]), libGalExe_bool(player, params[4]));
	}
	else if(function == "MoviePlayAfterGame"){
		MoviePlayAfterGame(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UISetNextLoadingScreen"){
		UISetNextLoadingScreen(libGalExe_string(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_text(player, params[3]), libGalExe_text(player, params[4]), libGalExe_bool(player, params[5]));
	}
	else if(function == "UISetNextLoadingScreenImageScale"){
		UISetNextLoadingScreenImageScale(libGalExe_int(player, params[0]));
	}
	else if(function == "UISetNextLoadingScreenTextPosition"){
		UISetNextLoadingScreenTextPosition(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "UISetRestartLoadingScreen"){
		UISetRestartLoadingScreen(libGalExe_text(player, params[0]));
	}
	else if(function == "UISetChallengeMode"){
		UISetChallengeMode(libGalExe_playergroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UISetChallengeHighScore"){
		UISetChallengeHighScore(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UISetChallengeScoreText"){
		UISetChallengeScoreText(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_text(player, params[2]));
	}
	else if(function == "UISetChallengeCompleted"){
		UISetChallengeCompleted(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PathCreateForUnit"){
		PathCreateForUnit(libGalExe_playergroup(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "PathCreateForUnitType"){
		PathCreateForUnitType(libGalExe_playergroup(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_point(player, params[3]));
	}
	else if(function == "PathDestroy"){
		PathDestroy(libGalExe_int(player, params[0]));
	}
	else if(function == "PathDestroyAll"){
		PathDestroyAll(libGalExe_playergroup(player, params[0]));
	}
	else if(function == "PathSetDestinationPoint"){
		PathSetDestinationPoint(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "PathSetDestinationUnit"){
		PathSetDestinationUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "PathSetSourcePoint"){
		PathSetSourcePoint(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "PathSetSourceUnit"){
		PathSetSourceUnit(libGalExe_int(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "PathSetLineTexture"){
		PathSetLineTexture(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "PathSetLineTileLength"){
		PathSetLineTileLength(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PathSetLineWidth"){
		PathSetLineWidth(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PathSetStepMidpoint"){
		PathSetStepMidpoint(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PathSetStepModel"){
		PathSetStepModel(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "PathSetStepModelScale"){
		PathSetStepModelScale(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "PathSetColor"){
		PathSetColor(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_color(player, params[2]));
	}
	else if(function == "PathSetVisible"){
		PathSetVisible(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "PathSetAbilClassFilter"){
		PathSetAbilClassFilter(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "PathClearWayPoints"){
		PathClearWayPoints(libGalExe_int(player, params[0]));
	}
	else if(function == "PathAddWayPoint"){
		PathAddWayPoint(libGalExe_int(player, params[0]), libGalExe_point(player, params[1]));
	}
	else if(function == "PathSetMinimumLinearDistance"){
		PathSetMinimumLinearDistance(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PathSetMinimumTravelDistance"){
		PathSetMinimumTravelDistance(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "PathSetMinimumStepCount"){
		PathSetMinimumStepCount(libGalExe_int(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UnitShowKillDisplay"){
		UnitShowKillDisplay(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "libNtve_gf_CreateUnitsWithDefaultFacing"){
		libNtve_gf_CreateUnitsWithDefaultFacing(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_point(player, params[4]));
	}
	else if(function == "libNtve_gf_CreateUnitsAtPoint2"){
		libNtve_gf_CreateUnitsAtPoint2(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_point(player, params[4]));
	}
	else if(function == "UnitCreate"){
		UnitCreate(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_point(player, params[4]), libGalExe_fixed(player, params[5]));
	}
	else if(function == "libNtve_gf_UnitCreateFacingPoint"){
		libNtve_gf_UnitCreateFacingPoint(libGalExe_int(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]), libGalExe_point(player, params[4]), libGalExe_point(player, params[5]));
	}
	else if(function == "libNtve_gf_ReplaceUnit"){
		libNtve_gf_ReplaceUnit(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitSetOwner"){
		UnitSetOwner(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_RescueUnit"){
		libNtve_gf_RescueUnit(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_RescueUnit2"){
		libNtve_gf_RescueUnit2(libGalExe_unitgroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitKill"){
		UnitKill(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitRevive"){
		UnitRevive(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitRemove"){
		UnitRemove(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitSetPosition"){
		UnitSetPosition(libGalExe_unit(player, params[0]), libGalExe_point(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitSetFacing"){
		UnitSetFacing(libGalExe_unit(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_MakeUnitFacePoint"){
		libNtve_gf_MakeUnitFacePoint(libGalExe_unit(player, params[0]), libGalExe_point(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_PauseUnit"){
		libNtve_gf_PauseUnit(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UnitPauseAll"){
		UnitPauseAll(libGalExe_bool(player, params[0]));
	}
	else if(function == "libNtve_gf_SleepUnit"){
		libNtve_gf_SleepUnit(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_ShowHideUnit"){
		libNtve_gf_ShowHideUnit(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_ShareVisionofUnit"){
		libNtve_gf_ShareVisionofUnit(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitSetCustomValue"){
		UnitSetCustomValue(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitLoadModel"){
		UnitLoadModel(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitUnloadModel"){
		UnitUnloadModel(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitEventSetNullVariableInvalid"){
		UnitEventSetNullVariableInvalid(libGalExe_bool(player, params[0]));
	}
	else if(function == "UnitIssueOrder"){
		UnitIssueOrder(libGalExe_unit(player, params[0]), libGalExe_order(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitGroupIssueOrder"){
		UnitGroupIssueOrder(libGalExe_unitgroup(player, params[0]), libGalExe_order(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitWaitUntilIdle"){
		UnitWaitUntilIdle(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UnitGroupWaitUntilIdle"){
		UnitGroupWaitUntilIdle(libGalExe_unitgroup(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitSetPropertyFixed"){
		UnitSetPropertyFixed(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitSetState"){
		UnitSetState(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "libNtve_gf_MakeUnitInvulnerable"){
		libNtve_gf_MakeUnitInvulnerable(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_MakeUnitUncommandable"){
		libNtve_gf_MakeUnitUncommandable(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UnitResetSpeed"){
		UnitResetSpeed(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitSetTeamColorIndex"){
		UnitSetTeamColorIndex(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UnitSetCursor"){
		UnitSetCursor(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitSetPingCursor"){
		UnitSetPingCursor(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitSetInfoText"){
		UnitSetInfoText(libGalExe_unit(player, params[0]), libGalExe_text(player, params[1]), libGalExe_text(player, params[2]), libGalExe_text(player, params[3]));
	}
	else if(function == "UnitSetInfoText2"){
		UnitSetInfoText2(libGalExe_unit(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "UnitSetInfoTip"){
		UnitSetInfoTip(libGalExe_unit(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "UnitSetInfoSubTip"){
		UnitSetInfoSubTip(libGalExe_unit(player, params[0]), libGalExe_text(player, params[1]));
	}
	else if(function == "UnitClearInfoText"){
		UnitClearInfoText(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitForceStatusBar"){
		UnitForceStatusBar(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UnitStatusBarOverride"){
		UnitStatusBarOverride(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UnitStatusBarClearOverride"){
		UnitStatusBarClearOverride(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitSetScale"){
		UnitSetScale(libGalExe_unit(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "libNtve_gf_UnitSetVariation"){
		libNtve_gf_UnitSetVariation(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "UnitSetHeight"){
		UnitSetHeight(libGalExe_unit(player, params[0]), libGalExe_fixed(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_ChangeUnitDamage"){
		libNtve_gf_ChangeUnitDamage(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitFilterSetState"){
		UnitFilterSetState(libGalExe_unitfilter(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitCargoCreate"){
		UnitCargoCreate(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitInventoryCreate"){
		UnitInventoryCreate(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitInventoryContainerOpen"){
		UnitInventoryContainerOpen(libGalExe_playergroup(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "UnitInventoryMove"){
		UnitInventoryMove(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitInventoryRemove"){
		UnitInventoryRemove(libGalExe_unit(player, params[0]));
	}
	else if(function == "UnitAbilityShow"){
		UnitAbilityShow(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitAbilityEnable"){
		UnitAbilityEnable(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitAbilityChangeLevel"){
		UnitAbilityChangeLevel(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitBehaviorRemoveCategory"){
		UnitBehaviorRemoveCategory(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]));
	}
	else if(function == "UnitBehaviorRemovePlayer"){
		UnitBehaviorRemovePlayer(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UnitBehaviorRemove"){
		UnitBehaviorRemove(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitBehaviorAddPlayer"){
		UnitBehaviorAddPlayer(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UnitBehaviorAdd"){
		UnitBehaviorAdd(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "libNtve_gf_SetBehaviorCount"){
		libNtve_gf_SetBehaviorCount(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UnitBehaviorTransfer"){
		UnitBehaviorTransfer(libGalExe_unit(player, params[0]), libGalExe_unit(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UnitBehaviorSetDuration"){
		UnitBehaviorSetDuration(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitBehaviorSetDurationRemaining"){
		UnitBehaviorSetDurationRemaining(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitBehaviorSpawn"){
		UnitBehaviorSpawn(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitWeaponRemove"){
		UnitWeaponRemove(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitWeaponAdd"){
		UnitWeaponAdd(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "UnitMagazineArm"){
		UnitMagazineArm(libGalExe_unit(player, params[0]), libGalExe_abilcmd(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitWeaponSetPeriodRemaining"){
		UnitWeaponSetPeriodRemaining(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitXPAddXP"){
		UnitXPAddXP(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitXPSetCurrentXP"){
		UnitXPSetCurrentXP(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitXPSetXPForLevel"){
		UnitXPSetXPForLevel(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UnitXPSetCurrentLevel"){
		UnitXPSetCurrentLevel(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitXPGainEnable"){
		UnitXPGainEnable(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bool(player, params[2]));
	}
	else if(function == "UnitSetProgressComplete"){
		UnitSetProgressComplete(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitSetProgressStage"){
		UnitSetProgressStage(libGalExe_unit(player, params[0]), libGalExe_int(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitBehaviorRemoveChargeRegen"){
		libNtve_gf_UnitBehaviorRemoveChargeRegen(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitAbilityRemoveChargeRegen"){
		libNtve_gf_UnitAbilityRemoveChargeRegen(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitRemoveChargeRegen"){
		libNtve_gf_UnitRemoveChargeRegen(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitBehaviorAddChargeRegen"){
		UnitBehaviorAddChargeRegen(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAbilityAddChargeRegen"){
		UnitAbilityAddChargeRegen(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAddChargeRegen"){
		UnitAddChargeRegen(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitAbilitySpend"){
		UnitAbilitySpend(libGalExe_unit(player, params[0]), libGalExe_abilcmd(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitAddCooldown"){
		UnitAddCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitBehaviorAddChargeRegenRemaining"){
		UnitBehaviorAddChargeRegenRemaining(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAbilityAddChargeRegenRemaining"){
		UnitAbilityAddChargeRegenRemaining(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAddChargeRegenRemaining"){
		UnitAddChargeRegenRemaining(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitBehaviorAddChargeRegenFull"){
		UnitBehaviorAddChargeRegenFull(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAbilityAddChargeRegenFull"){
		UnitAbilityAddChargeRegenFull(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAddChargeRegenFull"){
		UnitAddChargeRegenFull(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "UnitBehaviorAddChargeUsed"){
		UnitBehaviorAddChargeUsed(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAbilityAddChargeUsed"){
		UnitAbilityAddChargeUsed(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAddChargeUsed"){
		UnitAddChargeUsed(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitBehaviorRemoveChargeUsed"){
		libNtve_gf_UnitBehaviorRemoveChargeUsed(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitAbilityRemoveChargeUsed"){
		libNtve_gf_UnitAbilityRemoveChargeUsed(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitRemoveChargeUsed"){
		libNtve_gf_UnitRemoveChargeUsed(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitBehaviorAddCooldown"){
		UnitBehaviorAddCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitAbilityAddCooldown"){
		UnitAbilityAddCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitModifyCooldown"){
		UnitModifyCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UnitClearCooldowns"){
		UnitClearCooldowns(libGalExe_unit(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_UnitBehaviorRemoveCooldown"){
		libNtve_gf_UnitBehaviorRemoveCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitAbilityRemoveCooldown"){
		libNtve_gf_UnitAbilityRemoveCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "libNtve_gf_UnitRemoveCooldown"){
		libNtve_gf_UnitRemoveCooldown(libGalExe_unit(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UnitAbilitySpendExplicit"){
		UnitAbilitySpendExplicit(libGalExe_unit(player, params[0]), libGalExe_abilcmd(player, params[1]), libGalExe_int(player, params[2]), libGalExe_fixed(player, params[3]), libGalExe_fixed(player, params[4]), libGalExe_fixed(player, params[5]), libGalExe_fixed(player, params[6]));
	}
	else if(function == "UnitAbilityReset"){
		UnitAbilityReset(libGalExe_unit(player, params[0]), libGalExe_abilcmd(player, params[1]), libGalExe_int(player, params[2]));
	}
	else if(function == "UnitTypeMoveBlockersFromPoint"){
		UnitTypeMoveBlockersFromPoint(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_point(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitTypeMoveBlockersFromUnit"){
		UnitTypeMoveBlockersFromUnit(libGalExe_string(player, params[0]), libGalExe_int(player, params[1]), libGalExe_unit(player, params[2]), libGalExe_fixed(player, params[3]));
	}
	else if(function == "UnitGroupAdd"){
		UnitGroupAdd(libGalExe_unitgroup(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "libNtve_gf_AddUnitGroupToUnitGroup"){
		libNtve_gf_AddUnitGroupToUnitGroup(libGalExe_unitgroup(player, params[0]), libGalExe_unitgroup(player, params[1]));
	}
	else if(function == "UnitGroupAddUnitGroup"){
		UnitGroupAddUnitGroup(libGalExe_unitgroup(player, params[0]), libGalExe_unitgroup(player, params[1]));
	}
	else if(function == "UnitGroupRemove"){
		UnitGroupRemove(libGalExe_unitgroup(player, params[0]), libGalExe_unit(player, params[1]));
	}
	else if(function == "libNtve_gf_RemoveUnitGroupFromUnitGroup"){
		libNtve_gf_RemoveUnitGroupFromUnitGroup(libGalExe_unitgroup(player, params[0]), libGalExe_unitgroup(player, params[1]));
	}
	else if(function == "UnitGroupRemoveUnitGroup"){
		UnitGroupRemoveUnitGroup(libGalExe_unitgroup(player, params[0]), libGalExe_unitgroup(player, params[1]));
	}
	else if(function == "UnitGroupClear"){
		UnitGroupClear(libGalExe_unitgroup(player, params[0]));
	}
	else if(function == "UnitGroupPauseAll"){
		UnitGroupPauseAll(libGalExe_unitgroup(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "UserDataSetAbilCmd"){
		UserDataSetAbilCmd(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_abilcmd(player, params[4]));
	}
	else if(function == "UserDataSetActor"){
		UserDataSetActor(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetColor"){
		UserDataSetColor(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_color(player, params[4]));
	}
	else if(function == "UserDataSetCompare"){
		UserDataSetCompare(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "UserDataSetGameLink"){
		UserDataSetGameLink(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetImagePath"){
		UserDataSetImagePath(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetImageEdge"){
		UserDataSetImageEdge(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "UserDataSetImageAttachPoint"){
		UserDataSetImageAttachPoint(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetInt"){
		UserDataSetInt(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_int(player, params[4]));
	}
	else if(function == "UserDataSetModel"){
		UserDataSetModel(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetMovie"){
		UserDataSetMovie(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetFixed"){
		UserDataSetFixed(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_fixed(player, params[4]));
	}
	else if(function == "UserDataSetSound"){
		UserDataSetSound(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetString"){
		UserDataSetString(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetText"){
		UserDataSetText(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_text(player, params[4]));
	}
	else if(function == "UserDataSetUnit"){
		UserDataSetUnit(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetUpgrade"){
		UserDataSetUpgrade(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]));
	}
	else if(function == "UserDataSetUser"){
		UserDataSetUser(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]), libGalExe_string(player, params[4]), libGalExe_string(player, params[5]));
	}
	else if(function == "UserDataSaveInstance"){
		UserDataSaveInstance(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bank(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "UserDataLoadInstance"){
		UserDataLoadInstance(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_bank(player, params[2]), libGalExe_string(player, params[3]));
	}
	else if(function == "UserDataSaveType"){
		UserDataSaveType(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "UserDataLoadType"){
		UserDataLoadType(libGalExe_string(player, params[0]), libGalExe_bank(player, params[1]), libGalExe_string(player, params[2]));
	}
	else if(function == "UserDataResetValue"){
		UserDataResetValue(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]), libGalExe_string(player, params[2]), libGalExe_int(player, params[3]));
	}
	else if(function == "UserDataResetInstance"){
		UserDataResetInstance(libGalExe_string(player, params[0]), libGalExe_string(player, params[1]));
	}
	else if(function == "UserDataResetType"){
		UserDataResetType(libGalExe_string(player, params[0]));
	}
	else if(function == "UserDataResetAll"){
		UserDataResetAll();
	}
	else if(function == "VisRevealArea"){
		VisRevealArea(libGalExe_int(player, params[0]), libGalExe_region(player, params[1]), libGalExe_fixed(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "VisExploreArea"){
		VisExploreArea(libGalExe_int(player, params[0]), libGalExe_region(player, params[1]), libGalExe_bool(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "VisFillArea"){
		VisFillArea(libGalExe_int(player, params[0]), libGalExe_region(player, params[1]), libGalExe_int(player, params[2]), libGalExe_bool(player, params[3]));
	}
	else if(function == "VisEnable"){
		VisEnable(libGalExe_int(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "libNtve_gf_ShowHidePlacementModels"){
		libNtve_gf_ShowHidePlacementModels(libGalExe_bool(player, params[0]));
	}
	else if(function == "VisSetFoWAlpha"){
		VisSetFoWAlpha(libGalExe_int(player, params[0]), libGalExe_fixed(player, params[1]));
	}
	else if(function == "VisResetFoWAlpha"){
		VisResetFoWAlpha(libGalExe_int(player, params[0]));
	}
	else if(function == "VisRevealerCreate"){
		VisRevealerCreate(libGalExe_int(player, params[0]), libGalExe_region(player, params[1]));
	}
	else if(function == "VisRevealerEnable"){
		VisRevealerEnable(libGalExe_revealer(player, params[0]), libGalExe_bool(player, params[1]));
	}
	else if(function == "VisRevealerUpdate"){
		VisRevealerUpdate(libGalExe_revealer(player, params[0]));
	}
	else if(function == "VisRevealerDestroy"){
		VisRevealerDestroy(libGalExe_revealer(player, params[0]));
    }
    else if(function == "print" || function == "printf" || function == "debug"){
        UIDisplayMessage(PlayerGroupSingle(player), 7, StringToText(libGalExe_string(player, params[0])));
    }
}